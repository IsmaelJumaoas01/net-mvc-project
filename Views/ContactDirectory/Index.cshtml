@model IEnumerable<homeowner.Models.ContactDirectoryModel>

@{
    ViewData["Title"] = "Contact Directory";
    var isAdmin = ViewBag.IsAdmin;
}

<div class="container mt-4">
    <div class="page-header">
        <div class="header-content">
            <h2><i class="fas fa-address-book"></i> Contact Directory</h2>
            <p>Find and manage contact information</p>
        </div>
    </div>

    <div class="contact-directory">
        <div class="header-container">
            <div class="header-actions">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="Search contacts...">
                </div>
                <div class="filter-dropdown">
                    <select id="departmentFilter" class="form-control">
                        <option value="">All Departments</option>
                        @{
                            var departments = Model.Select(c => c.Department).Distinct().OrderBy(d => d);
                            foreach (var dept in departments)
                            {
                                <option value="@dept">@dept</option>
                            }
                        }
                    </select>
                </div>
                @if (isAdmin)
                {
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addContactModal">
                        <i class="fas fa-plus"></i> Add New Contact
                    </button>
                }
            </div>
        </div>

        <div class="contacts-grid" id="contactsGrid">
            @foreach (var contact in Model)
            {
                <div class="contact-card" data-department="@contact.Department.ToLower()">
                    <div class="contact-header">
                        <div class="contact-avatar">
                            <div class="avatar-placeholder">
                                @(contact.Name?.Length > 0 ? contact.Name.Substring(0, 1).ToUpper() : "?")
                            </div>
                        </div>
                        <div class="contact-title">
                            <h3>@contact.Name</h3>
                            <span class="department-badge">@contact.Department</span>
                        </div>
                        @if (isAdmin)
                        {
                            <div class="contact-actions">
                                <button class="btn btn-sm btn-outline-primary edit-contact" 
                                        data-contact-id="@contact.ContactID"
                                        data-bs-toggle="modal" 
                                        data-bs-target="#editContactModal">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger delete-contact" 
                                        data-contact-id="@contact.ContactID">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        }
                    </div>
                    <div class="contact-info">
                        <div class="info-item">
                            <i class="fas fa-briefcase"></i>
                            <span>@contact.Position</span>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-phone"></i>
                            <a href="tel:@contact.PhoneNumber">@contact.PhoneNumber</a>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-envelope"></i>
                            <a href="mailto:@contact.Email">@contact.Email</a>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-building"></i>
                            <span>@contact.OfficeLocation</span>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-clock"></i>
                            <span>@contact.OfficeHours</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (isAdmin)
{
    <!-- Add Contact Modal -->
    <div class="modal fade" id="addContactModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Contact</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addContactForm">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Position</label>
                            <input type="text" class="form-control" name="Position" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Department</label>
                            <input type="text" class="form-control" name="Department" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" name="PhoneNumber" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Office Location</label>
                            <input type="text" class="form-control" name="OfficeLocation" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Office Hours</label>
                            <input type="text" class="form-control" name="OfficeHours" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="submitAddContact">Add Contact</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Contact Modal -->
    <div class="modal fade" id="editContactModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Contact</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editContactForm">
                        <input type="hidden" name="ContactID" id="editContactId">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="Name" id="editName" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Position</label>
                            <input type="text" class="form-control" name="Position" id="editPosition" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Department</label>
                            <input type="text" class="form-control" name="Department" id="editDepartment" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" name="PhoneNumber" id="editPhoneNumber" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="Email" id="editEmail" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Office Location</label>
                            <input type="text" class="form-control" name="OfficeLocation" id="editOfficeLocation" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Office Hours</label>
                            <input type="text" class="form-control" name="OfficeHours" id="editOfficeHours" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="submitEditContact">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <style>
        body {
            background-color: #0d1117; /* GitHub dark theme background */
            color: #ffffff;
            font-family: 'Poppins', sans-serif;
        }

        .container {
            position: relative;
            padding: 2rem;
            background-color: #161b22; /* GitHub dark theme container */
            border-radius: 20px;
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
        }

        .page-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding: 1.5rem;
            background: #21262d; /* GitHub dark theme header */
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .header-content {
            flex: 1;
        }

        .page-header h2 {
            color: #fff;
            font-size: 1.8rem;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .page-header p {
            color: #8b949e; /* GitHub dark theme text */
            margin: 0.5rem 0 0 0;
            font-size: 1rem;
        }

        .contact-directory {
            padding: 2rem;
            background: #21262d; /* GitHub dark theme section */
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
            padding: 1rem;
            background: #2d333b;
            border-radius: 10px;
            border: 1px solid #30363d;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-box {
            position: relative;
            min-width: 250px;
        }

        .search-box input {
            width: 100%;
            padding: 0.5rem 1rem 0.5rem 2.5rem;
            border-radius: 8px;
            border: 1px solid #333;
            background: #222;
            color: #fff;
        }

        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .filter-dropdown select {
            padding: 0.5rem;
            border-radius: 8px;
            border: 1px solid #333;
            background: #222;
            color: #fff;
            min-width: 150px;
        }

        .contacts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .contact-card {
            background: #2d333b;
            border-radius: 10px;
            padding: 1.2rem;
            margin-bottom: 1rem;
            border: 1px solid #30363d;
            transition: transform 0.3s ease;
        }

        .contact-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        .contact-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #30363d;
        }

        .contact-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            overflow: hidden;
            flex-shrink: 0;
        }

        .avatar-placeholder {
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, #007bff, #00d2ff);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .contact-title {
            color: #fff;
            font-size: 1.2rem;
            margin: 0;
        }

        .department-badge {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            background: rgba(0, 123, 255, 0.1);
            color: #007bff;
            border-radius: 20px;
            font-size: 0.875rem;
        }

        .contact-actions {
            display: flex;
            gap: 0.5rem;
        }

        .contact-info {
            display: grid;
            gap: 1rem;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            color: #aaa;
        }

        .info-item i {
            color: #007bff;
            width: 16px;
        }

        .info-item a {
            color: #aaa;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .info-item a:hover {
            color: #007bff;
        }

        .modal-content {
            background: #21262d;
            border: 1px solid #30363d;
            color: #c9d1d9;
        }

        .modal-header {
            background: #2d333b;
            border-bottom: 1px solid #30363d;
            padding: 1.5rem;
        }

        .modal-title {
            color: #fff;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .modal-body {
            background: #21262d;
            padding: 1.5rem;
        }

        .modal-footer {
            background: #2d333b;
            border-top: 1px solid #30363d;
            padding: 1rem;
        }

        .form-label {
            color: #c9d1d9;
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        .form-control {
            background: #2d333b;
            border: 1px solid #30363d;
            color: #c9d1d9;
            border-radius: 6px;
        }

        .form-control:focus {
            background: #2d333b;
            border-color: #58a6ff;
            color: #c9d1d9;
            box-shadow: 0 0 0 3px rgba(88, 166, 255, 0.2);
        }

        .form-select {
            background-color: #2d333b;
            border: 1px solid #30363d;
            color: #c9d1d9;
        }

        .form-select:focus {
            background-color: #2d333b;
            border-color: #58a6ff;
            color: #c9d1d9;
            box-shadow: 0 0 0 3px rgba(88, 166, 255, 0.2);
        }

        .btn-close {
            color: #8b949e;
            opacity: 0.8;
            filter: invert(1) grayscale(100%) brightness(200%);
        }

        .btn-close:hover {
            color: #fff;
            opacity: 1;
        }

        .btn-primary {
            background: #238636;
            border: 1px solid rgba(240,246,252,0.1);
            color: #fff;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: all 0.2s ease;
        }

        .btn-primary:hover {
            background: #2ea043;
            transform: translateY(-1px);
        }

        .btn-secondary {
            background: #21262d;
            border: 1px solid #30363d;
            color: #c9d1d9;
        }

        .btn-secondary:hover {
            background: #2d333b;
            border-color: #58a6ff;
            color: #fff;
        }

        /* Contact Cards */
        .contact-card {
            background: #2d333b;
            border-radius: 10px;
            padding: 1.2rem;
            margin-bottom: 1rem;
            border: 1px solid #30363d;
            transition: transform 0.3s ease;
        }

        .contact-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

        .contact-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #30363d;
        }

        .contact-title {
            color: #fff;
            font-size: 1.2rem;
            margin: 0;
        }

        .contact-meta {
            color: #8b949e;
            font-size: 0.9rem;
        }

        .contact-content {
            color: #c9d1d9;
            margin-bottom: 1rem;
            line-height: 1.6;
        }

        /* Toast Notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 2rem;
            border-radius: 10px;
            color: white;
            font-weight: 500;
            transform: translateX(120%);
            transition: transform 0.3s ease;
            z-index: 9999;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .toast.show {
            transform: translateX(0);
        }

        .toast.success {
            background: linear-gradient(45deg, #238636, #2ea043);
        }

        .toast.error {
            background: linear-gradient(45deg, #f85149, #f85149);
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('input', function() {
                const query = $(this).val().toLowerCase();
                const department = $('#departmentFilter').val();
                filterContacts(query, department);
            });

            // Department filter
            $('#departmentFilter').change(function() {
                const query = $('#searchInput').val().toLowerCase();
                const department = $(this).val();
                filterContacts(query, department);
            });

            function filterContacts(query, department) {
                $.get('/ContactDirectory/Search', { query: query, department: department }, function(contacts) {
                    $('#contactsGrid').empty();
                    contacts.forEach(contact => {
                        const card = createContactCard(contact);
                        $('#contactsGrid').append(card);
                    });
                });
            }

            function createContactCard(contact) {
                const isAdmin = @Json.Serialize(isAdmin);
                const adminActions = isAdmin ? `
                    <div class="contact-actions">
                        <button class="btn btn-sm btn-outline-primary edit-contact" 
                                data-contact-id="${contact.contactID}"
                                data-bs-toggle="modal" 
                                data-bs-target="#editContactModal">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-contact" 
                                data-contact-id="${contact.contactID}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>` : '';

                return `
                    <div class="contact-card" data-department="${contact.department.toLowerCase()}">
                        <div class="contact-header">
                            <div class="contact-avatar">
                                <div class="avatar-placeholder">
                                    ${contact.name.charAt(0).toUpperCase()}
                                </div>
                            </div>
                            <div class="contact-title">
                                <h3>${contact.name}</h3>
                                <span class="department-badge">${contact.department}</span>
                            </div>
                            ${adminActions}
                        </div>
                        <div class="contact-info">
                            <div class="info-item">
                                <i class="fas fa-briefcase"></i>
                                <span>${contact.position}</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-phone"></i>
                                <a href="tel:${contact.phoneNumber}">${contact.phoneNumber}</a>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-envelope"></i>
                                <a href="mailto:${contact.email}">${contact.email}</a>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-building"></i>
                                <span>${contact.officeLocation}</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock"></i>
                                <span>${contact.officeHours}</span>
                            </div>
                        </div>
                    </div>`;
            }

            // Add Contact
            $('#submitAddContact').click(function() {
                const formData = getFormData('#addContactForm');
                $.ajax({
                    url: '/ContactDirectory/Create',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while adding the contact.');
                    }
                });
            });

            // Edit Contact
            $('.edit-contact').click(function() {
                const contactId = $(this).data('contact-id');
                const card = $(this).closest('.contact-card');
                
                $('#editContactId').val(contactId);
                $('#editName').val(card.find('h3').text());
                $('#editPosition').val(card.find('.info-item:eq(0) span').text());
                $('#editDepartment').val(card.find('.department-badge').text());
                $('#editPhoneNumber').val(card.find('.info-item:eq(1) a').text());
                $('#editEmail').val(card.find('.info-item:eq(2) a').text());
                $('#editOfficeLocation').val(card.find('.info-item:eq(3) span').text());
                $('#editOfficeHours').val(card.find('.info-item:eq(4) span').text());
            });

            $('#submitEditContact').click(function() {
                const formData = getFormData('#editContactForm');
                $.ajax({
                    url: '/ContactDirectory/Edit',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while updating the contact.');
                    }
                });
            });

            // Delete Contact
            $(document).on('click', '.delete-contact', function() {
                if (confirm('Are you sure you want to delete this contact?')) {
                    const contactId = $(this).data('contact-id');
                    $.ajax({
                        url: '/ContactDirectory/Delete',
                        type: 'POST',
                        data: { id: contactId },
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('An error occurred while deleting the contact.');
                        }
                    });
                }
            });

            function getFormData(formId) {
                const formData = {};
                $(formId).serializeArray().forEach(item => {
                    formData[item.name] = item.value;
                });
                return formData;
            }
        });
    </script>
} 