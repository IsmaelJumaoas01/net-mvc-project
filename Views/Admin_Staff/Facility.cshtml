@model List<homeowner.Models.FacilityReservationModel>
@{
    ViewBag.Title = "Facility Reservations Management";
    string role = ViewBag.Role as string ?? "Staff";
}

<div class="facility-management">
    <div class="dashboard-header">
        <h1>Facility Reservations Management</h1>
        <div class="header-actions">
            @if (role == "Administrator")
            {
                <button class="btn btn-primary" data-toggle="modal" data-target="#addFacilityModal">
                    <i class="fas fa-plus"></i> Add New Facility
                </button>
            }
        </div>
    </div>

    @if (role == "Administrator")
    {
        <div class="facility-list-section">
            <div class="section-header">
                <h2><i class="fas fa-building"></i> Manage Facilities</h2>
            </div>
            <div class="facility-grid">
                @foreach (var facility in ViewBag.FacilityNames as List<homeowner.Models.FacilityModel>)
                {
                    <div class="facility-card">
                        <div class="facility-card-content">
                            <div class="facility-info">
                                <i class="fas fa-building facility-icon"></i>
                                <h3>@facility.FacilityName</h3>
                            </div>
                            <button class="btn btn-danger delete-facility" data-facility-id="@facility.FacilityID">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <div class="reservations-section">
        <div class="section-header">
            <h2><i class="fas fa-calendar-check"></i> Reservations</h2>
            <div class="filter-controls">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="Search reservations...">
                </div>
                <select id="statusFilter" class="form-control">
                    <option value="All">All Status</option>
                    <option value="Pending">Pending</option>
                    <option value="Confirmed">Confirmed</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>
        </div>

        <div class="reservations-grid">
            @foreach (var res in Model)
            {
                <div class="reservation-card" data-reservation-id="@res.ReservationID" data-status="@res.Status">
                    <div class="reservation-header">
                        <div class="reservation-id">#@res.ReservationID</div>
                        <span class="status-badge @res.Status.ToLower()">@res.Status</span>
                    </div>
                    <div class="reservation-body">
                        <div class="reservation-info">
                            <div class="info-item">
                                <i class="fas fa-user"></i>
                                <span>User ID: @res.UserID</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-building"></i>
                                <span>@res.FacilityName</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-calendar"></i>
                                <span>@res.ReservationDate.ToString("MMM dd, yyyy")</span>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock"></i>
                                <span>@res.StartTime.ToString(@"hh\:mm") - @res.EndTime.ToString(@"hh\:mm")</span>
                            </div>
                        </div>
                        <div class="reservation-actions">
                            <select class="form-control status-select">
                                <option value="Pending" selected="@(res.Status == "Pending")">Pending</option>
                                <option value="Confirmed" selected="@(res.Status == "Confirmed")">Confirmed</option>
                                <option value="Cancelled" selected="@(res.Status == "Cancelled")">Cancelled</option>
                            </select>
                            <button class="btn btn-primary update-status-btn">
                                <i class="fas fa-check"></i> Update
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Facility Modal -->
<div class="modal fade" id="addFacilityModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Facility</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addFacilityForm">
                    <div class="form-group">
                        <label>Facility Name</label>
                        <input type="text" class="form-control" name="facilityName" required>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Facility
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .facility-management {
        padding: 2rem;
        background: #1a1a1a;
        min-height: 100vh;
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .dashboard-header h1 {
        color: #fff;
        font-size: 2rem;
        margin: 0;
        background: linear-gradient(45deg, #00bcd4, #2196f3);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Facility List Section */
    .facility-list-section {
        background: #222;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .section-header h2 {
        color: #fff;
        font-size: 1.5rem;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .section-header h2 i {
        color: #00bcd4;
    }

    .facility-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1rem;
    }

    .facility-card {
        background: #2a2a2a;
        border-radius: 12px;
        padding: 1.5rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .facility-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    }

    .facility-card-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .facility-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .facility-icon {
        font-size: 1.5rem;
        color: #00bcd4;
    }

    .facility-card h3 {
        color: #fff;
        margin: 0;
        font-size: 1.2rem;
    }

    /* Reservations Section */
    .reservations-section {
        background: #222;
        border-radius: 15px;
        padding: 1.5rem;
    }

    .filter-controls {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    .search-box {
        position: relative;
        flex: 1;
    }

    .search-box i {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
    }

    .search-box input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        background: #2a2a2a;
        border: 1px solid #333;
        border-radius: 8px;
        color: #fff;
        transition: all 0.3s ease;
    }

    .search-box input:focus {
        background: #333;
        border-color: #00bcd4;
        box-shadow: 0 0 0 2px rgba(0, 188, 212, 0.25);
    }

    .form-control {
        background: #2a2a2a;
        border: 1px solid #333;
        color: #fff;
        border-radius: 8px;
        padding: 0.75rem 1rem;
    }

    .form-control:focus {
        background: #333;
        border-color: #00bcd4;
        box-shadow: 0 0 0 2px rgba(0, 188, 212, 0.25);
        color: #fff;
    }

    /* Reservation Cards */
    .reservations-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .reservation-card {
        background: #2a2a2a;
        border-radius: 12px;
        overflow: hidden;
    }

    .reservation-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.5rem;
        background: #333;
    }

    .reservation-id {
        color: #00bcd4;
        font-weight: 500;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .status-badge.pending {
        background: rgba(255, 193, 7, 0.2);
        color: #ffc107;
    }

    .status-badge.confirmed {
        background: rgba(76, 175, 80, 0.2);
        color: #4caf50;
    }

    .status-badge.cancelled {
        background: rgba(244, 67, 54, 0.2);
        color: #f44336;
    }

    .reservation-body {
        padding: 1.5rem;
    }

    .reservation-info {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .info-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #ddd;
    }

    .info-item i {
        color: #00bcd4;
        width: 16px;
    }

    .reservation-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
        padding-top: 1rem;
        border-top: 1px solid #333;
    }

    .status-select {
        flex: 1;
    }

    /* Button Styles */
    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    .btn i {
        font-size: 1rem;
    }

    .btn-primary {
        background: #00bcd4;
        border: none;
    }

    .btn-primary:hover {
        background: #008ba3;
        transform: translateY(-2px);
    }

    .btn-danger {
        background: #f44336;
        border: none;
    }

    .btn-danger:hover {
        background: #d32f2f;
        transform: translateY(-2px);
    }

    /* Modal Styles */
    .modal-content {
        background: #2a2a2a;
        color: #fff;
        border-radius: 12px;
    }

    .modal-header {
        border-bottom: 1px solid #333;
        padding: 1.5rem;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-header .close {
        color: #fff;
    }

    .form-group label {
        color: #00bcd4;
        margin-bottom: 0.5rem;
    }

    /* Toast Styles */
    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 2rem;
        border-radius: 10px;
        color: white;
        font-weight: 500;
        transform: translateX(120%);
        transition: transform 0.3s ease;
        z-index: 9999;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .toast.show {
        transform: translateX(0);
    }

    .toast.success {
        background: linear-gradient(45deg, #4CAF50, #8BC34A);
    }

    .toast.error {
        background: linear-gradient(45deg, #f44336, #e91e63);
    }
</style>

<script>
    $(document).ready(function () {
        // Facility addition
        $("#addFacilityForm").submit(function (e) {
            e.preventDefault();
            var facilityName = $("input[name='facilityName']").val();
            $.ajax({
                url: '@Url.Action("AddFacility", "FacilityReservation")',
                type: 'POST',
                data: { facilityName: facilityName },
                success: function (response) {
                    if (response.success) {
                        showToast('Facility added successfully!', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast(response.message, 'error');
                    }
                }
            });
        });

        // Delete facility
        $(".delete-facility").click(function () {
            if (confirm("Are you sure you want to delete this facility?")) {
                var facilityID = $(this).data("facility-id");
                $.ajax({
                    url: '@Url.Action("DeleteFacility", "FacilityReservation")',
                    type: 'POST',
                    data: { facilityID: facilityID },
                    success: function (response) {
                        if (response.success) {
                            showToast('Facility deleted successfully!', 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(response.message, 'error');
                        }
                    }
                });
            }
        });

        // Update reservation status
        $(".update-status-btn").click(function () {
            var card = $(this).closest(".reservation-card");
            var reservationID = card.data("reservation-id");
            var newStatus = card.find(".status-select").val();
            $.ajax({
                url: '@Url.Action("UpdateReservationStatus", "FacilityReservation")',
                type: 'POST',
                data: { reservationID: reservationID, status: newStatus },
                success: function (response) {
                    if (response.success) {
                        card.find(".status-badge")
                            .removeClass("pending confirmed cancelled")
                            .addClass(newStatus.toLowerCase())
                            .text(newStatus);
                        showToast("Status updated successfully!", "success");
                    } else {
                        showToast(response.message, "error");
                    }
                }
            });
        });

        // Search functionality
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".reservation-card").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        // Status filter
        $("#statusFilter").change(function () {
            var selectedStatus = $(this).val();
            if (selectedStatus === "All") {
                $(".reservation-card").show();
            } else {
                $(".reservation-card").each(function () {
                    var status = $(this).data("status");
                    $(this).toggle(status === selectedStatus);
                });
            }
        });

        // Toast notification function
        function showToast(message, type) {
            const toast = $('<div>').addClass('toast ' + type).text(message);
            $('body').append(toast);
            setTimeout(() => toast.addClass('show'), 100);
            setTimeout(() => {
                toast.removeClass('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
    });
</script>