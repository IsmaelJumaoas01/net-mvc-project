@model Dictionary<string, decimal>
@{
    ViewData["Title"] = "Billing Management";
}

<div class="billing-admin-dashboard">
    <div class="page-header">
        <div class="header-content">
            <h1><i class="fas fa-file-invoice-dollar"></i> Billing Management</h1>
            <p>Manage bills, payments, and financial records</p>
        </div>
        <div class="header-actions">
            <button class="btn btn-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")'">
                <i class="fas fa-file-invoice"></i> Manage Bills
            </button>
            <button class="btn btn-outline-primary" id="generateReport">
                <i class="fas fa-chart-line"></i> Generate Report
            </button>
        </div>
    </div>

    <!-- Financial Overview -->
    <div class="financial-overview">
        <div class="stat-card total-pending">
            <div class="stat-icon">
                <i class="fas fa-clock"></i>
            </div>
            <div class="stat-content">
                <h3>Total Pending</h3>
                <div class="stat-value">₱@Model["TotalPending"].ToString("N2")</div>
                <div class="stat-label">Awaiting payment</div>
            </div>
        </div>

        <div class="stat-card total-collected">
            <div class="stat-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-content">
                <h3>Total Collected</h3>
                <div class="stat-value">₱@Model["TotalCollected"].ToString("N2")</div>
                <div class="stat-label">Successfully collected</div>
            </div>
        </div>

        <div class="stat-card total-overdue">
            <div class="stat-icon">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="stat-content">
                <h3>Total Overdue</h3>
                <div class="stat-value">₱@Model["TotalOverdue"].ToString("N2")</div>
                <div class="stat-label">Past due date</div>
            </div>
        </div>

        <div class="stat-card collection-rate">
            <div class="stat-icon">
                <i class="fas fa-percentage"></i>
            </div>
            <div class="stat-content">
                <h3>Collection Rate</h3>
                @{
                    decimal total = Model["TotalCollected"] + Model["TotalPending"] + Model["TotalOverdue"];
                    decimal rate = total > 0 ? (Model["TotalCollected"] / total) * 100 : 0;
                }
                <div class="stat-value">@rate.ToString("N1")%</div>
                <div class="stat-label">Overall collection rate</div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="quick-actions">
        <div class="action-card">
            <div class="card-header">
                <h3><i class="fas fa-bolt"></i> Quick Actions</h3>
            </div>
            <div class="card-body">
                <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")?action=generate'">
                    <i class="fas fa-plus"></i> Generate Monthly Bills
                </button>
                <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")?action=verify'">
                    <i class="fas fa-check-double"></i> Verify Payments
                </button>
                <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")?action=overdue'">
                    <i class="fas fa-exclamation-triangle"></i> Manage Overdue
                </button>
                <button class="btn btn-outline-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")?action=types'">
                    <i class="fas fa-cog"></i> Manage Bill Types
                </button>
            </div>
        </div>

        <div class="action-card">
            <div class="card-header">
                <h3><i class="fas fa-chart-pie"></i> Payment Methods</h3>
            </div>
            <div class="card-body">
                <div class="payment-methods-chart">
                    <canvas id="paymentMethodsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="recent-activity">
        <div class="section-header">
            <h3><i class="fas fa-history"></i> Recent Activity</h3>
            <button class="btn btn-sm btn-outline-primary" onclick="location.href='@Url.Action("ManageBills", "Billing")?view=history'">
                View All
            </button>
        </div>
        <div class="activity-list">
            <!-- Activity items will be dynamically loaded -->
        </div>
    </div>
</div>

@section Styles {
    <style>
        :root {
            --bg-primary: #f8f9fa;
            --bg-secondary: #ffffff;
            --text-primary: #2d333b;
            --text-secondary: #57606a;
            --border-color: #d0d7de;
            --accent-color: #0969da;
            --accent-hover: #1a7f37;
            --success-color: #238636;
            --danger-color: #cf222e;
            --warning-color: #9a6700;
            --shadow-color: rgba(0, 0, 0, 0.1);
            --card-bg: #ffffff;
            --card-hover: #f6f8fa;
            --icon-bg: #0969da;
            --icon-color: #ffffff;
            --gradient-primary: linear-gradient(45deg, #00bcd4, #2196f3);
            --gradient-success: linear-gradient(45deg, #4CAF50, #8BC34A);
            --gradient-warning: linear-gradient(45deg, #FFC107, #FF9800);
            --gradient-danger: linear-gradient(45deg, #f44336, #e91e63);
        }

        [data-theme="dark"] {
            --bg-primary: #0d1117;
            --bg-secondary: #161b22;
            --text-primary: #ffffff;
            --text-secondary: #8b949e;
            --border-color: #30363d;
            --accent-color: #58a6ff;
            --accent-hover: #1f6feb;
            --success-color: #238636;
            --danger-color: #f85149;
            --warning-color: #d29922;
            --shadow-color: rgba(0, 0, 0, 0.3);
            --card-bg: #21262d;
            --card-hover: #2d333b;
            --icon-bg: #58a6ff;
            --icon-color: #ffffff;
            --gradient-primary: linear-gradient(45deg, #58a6ff, #1f6feb);
            --gradient-success: linear-gradient(45deg, #238636, #2ea043);
            --gradient-warning: linear-gradient(45deg, #d29922, #f9a825);
            --gradient-danger: linear-gradient(45deg, #f85149, #f85149);
        }

        .billing-admin-dashboard {
            padding: 2rem;
            background-color: var(--bg-primary);
            min-height: 100vh;
            color: var(--text-primary);
        }

        .page-header {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border: 1px solid var(--border-color);
            box-shadow: 0 4px 15px var(--shadow-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-content h1 {
            color: var(--text-primary);
            font-size: 1.8rem;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .header-content p {
            color: var(--text-secondary);
            margin: 0.5rem 0 0 0;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
        }

        /* Financial Overview */
        .financial-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1.5rem;
            transition: transform 0.3s ease;
            border: 1px solid var(--border-color);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px var(--shadow-color);
            background: var(--card-hover);
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: var(--icon-color);
        }

        .total-pending .stat-icon {
            background: var(--gradient-warning);
        }

        .total-collected .stat-icon {
            background: var(--gradient-success);
        }

        .total-overdue .stat-icon {
            background: var(--gradient-danger);
        }

        .collection-rate .stat-icon {
            background: var(--gradient-primary);
        }

        .stat-content h3 {
            color: var(--text-primary);
            font-size: 1rem;
            margin: 0;
        }

        .stat-value {
            color: var(--text-primary);
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0.5rem 0;
        }

        .stat-label {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        /* Quick Actions */
        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .action-card {
            background: var(--card-bg);
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid var(--border-color);
        }

        .action-card .card-header {
            background: var(--bg-secondary);
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .action-card .card-header h3 {
            color: var(--text-primary);
            font-size: 1.2rem;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .action-card .card-body {
            padding: 1.5rem;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .btn-outline-primary {
            color: var(--accent-color);
            border-color: var(--accent-color);
            background: transparent;
            transition: all 0.3s ease;
        }

        .btn-outline-primary:hover {
            background: var(--accent-color);
            color: white;
            transform: translateY(-2px);
        }

        /* Recent Activity */
        .recent-activity {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            border: 1px solid var(--border-color);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
        }

        .section-header h3 {
            color: var(--text-primary);
            font-size: 1.2rem;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .activity-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .activity-item {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            transition: transform 0.3s ease;
        }

        .activity-item:hover {
            transform: translateX(5px);
            background: var(--card-hover);
        }

        .activity-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            color: var(--icon-color);
        }

        .activity-content {
            flex: 1;
        }

        .activity-title {
            color: var(--text-primary);
            font-size: 1rem;
            margin: 0 0 0.25rem 0;
        }

        .activity-meta {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        /* Chart Container */
        .payment-methods-chart {
            padding: 1rem;
            background: var(--bg-secondary);
            border-radius: 8px;
            height: 300px;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize payment methods chart
            const ctx = document.getElementById('paymentMethodsChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['GCash', 'Bank Transfer', 'Cash'],
                    datasets: [{
                        data: [45, 35, 20],
                        backgroundColor: [
                            'rgba(0, 123, 255, 0.8)',
                            'rgba(40, 167, 69, 0.8)',
                            'rgba(255, 193, 7, 0.8)'
                        ],
                        borderColor: '#1e1e1e',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: '#fff',
                                padding: 20
                            }
                        }
                    }
                }
            });

            // Load recent activity
            loadRecentActivity();

            // Generate Report button click handler
            $('#generateReport').click(function() {
                // Implement report generation logic
            });
        });

        function loadRecentActivity() {
            // Simulated activity data - replace with actual API call
            const activities = [
                { type: 'payment', message: 'Payment verified for John Doe', timestamp: '2 minutes ago' },
                { type: 'bill', message: 'Monthly bills generated for March 2024', timestamp: '1 hour ago' },
                { type: 'overdue', message: 'Overdue notice sent to 5 homeowners', timestamp: '3 hours ago' }
            ];

            const activityList = $('.activity-list');
            activityList.empty();

            activities.forEach(activity => {
                const activityHtml = `
                    <div class="activity-item">
                        <div class="activity-icon ${activity.type}">
                            <i class="fas fa-${getActivityIcon(activity.type)}"></i>
                        </div>
                        <div class="activity-content">
                            <div class="activity-message">${activity.message}</div>
                            <div class="activity-time">${activity.timestamp}</div>
                        </div>
                    </div>
                `;
                activityList.append(activityHtml);
            });
        }

        function getActivityIcon(type) {
            switch (type) {
                case 'payment': return 'check-circle';
                case 'bill': return 'file-invoice';
                case 'overdue': return 'exclamation-circle';
                default: return 'circle';
            }
        }
    </script>
} 