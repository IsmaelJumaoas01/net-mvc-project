@model IEnumerable<homeowner.Models.VisitorPass>
@{
    ViewData["Title"] = "Manage Visitor Passes";
}

<div class="page-header">
    <div class="header-content">
        <h1>Manage Visitor Passes</h1>
        <p class="description">Review and manage visitor pass requests from homeowners</p>
    </div>
    <div class="header-actions">
        <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" placeholder="Search by visitor name, contact, or purpose..." class="form-control">
        </div>
        <div class="filter-dropdown">
            <select id="statusFilter" class="form-control">
                <option value="">All Status</option>
                <option value="Pending">Pending</option>
                <option value="Approved">Approved</option>
                <option value="Rejected">Rejected</option>
            </select>
        </div>
    </div>
</div>

<div class="content-section">
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Owner</th>
                    <th>Visitor Name</th>
                    <th>Contact</th>
                    <th>Purpose</th>
                    <th>Visit Date</th>
                    <th>Visit Time</th>
                    <th>Expiry Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pass in Model)
                {
                    <tr>
                        <td>@pass.Username</td>
                        <td>@pass.VisitorName</td>
                        <td>@pass.VisitorContact</td>
                        <td>@pass.Purpose</td>
                        <td>@pass.VisitDate.ToString("MMM dd, yyyy")</td>
                        <td>@pass.VisitTime.ToString(@"hh\:mm")</td>
                        <td>@pass.ExpiryDate.ToString("MMM dd, yyyy")</td>
                        <td>
                            <span class="badge @(pass.Status == "Approved" ? "badge-success" : 
                                             pass.Status == "Pending" ? "badge-warning" : "badge-danger")">
                                @pass.Status
                            </span>
                            @if (pass.Status == "Rejected" && !string.IsNullOrEmpty(pass.RejectionReason))
                            {
                                <div class="rejection-reason" data-bs-toggle="tooltip" title="@pass.RejectionReason">
                                    <i class="fas fa-info-circle"></i> View Reason
                                </div>
                            }
                        </td>
                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-info btn-sm" onclick="viewPass(@pass.VisitorPassId)" title="View Details">
                                    <i class="fas fa-eye"></i>
                                </button>
                                @if (pass.Status == "Pending")
                                {
                                    <button type="button" class="btn btn-success btn-sm" onclick="approvePass(@pass.VisitorPassId)" title="Approve Pass">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="rejectPass(@pass.VisitorPassId)" title="Reject Pass">
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                                @if (pass.Status == "Approved")
                                {
                                    <a href="@Url.Action("GenerateVisitorPass", "Security", new { id = pass.VisitorPassId })"
                                       class="btn btn-sm download-btn text-white" title="Download Pass">
                                        <i class="fas fa-download"></i>
                                    </a>
                                }
                                @if (ViewBag.Role == "Administrator")
                                {
                                    <button type="button" class="btn btn-danger btn-sm" onclick="deletePass(@pass.VisitorPassId)" title="Delete Pass">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- View Pass Modal -->
<div class="modal fade" id="viewPassModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Visitor Pass Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="passDetails"></div>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject Visitor Pass</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="rejectForm">
                    <input type="hidden" id="passId" name="passId">
                    <div class="form-group">
                        <label for="rejectionReason">Reason for Rejection</label>
                        <textarea class="form-control" id="rejectionReason" name="rejectionReason" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="submitRejection()">Reject</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Search functionality
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Status filter
            $('#statusFilter').on('change', function() {
                var value = $(this).val().toLowerCase();
                if (value === '') {
                    $('tbody tr').show();
                } else {
                    $('tbody tr').each(function() {
                        var status = $(this).find('.badge').text().toLowerCase();
                        $(this).toggle(status === value);
                    });
                }
            });
        });

        function viewPass(id) {
            $.get('@Url.Action("GetVisitorPassDetails", "Security")', { id: id }, function(data) {
                $('#passDetails').html(data);
                $('#viewPassModal').modal('show');
            });
        }

        function approvePass(id) {
            if (confirm('Are you sure you want to approve this visitor pass?')) {
                $.post('@Url.Action("ApproveVisitorPass", "Security")', { id: id })
                    .done(function(response) {
                        if (response.success) {
                            showToast('Success', 'Visitor pass approved successfully', 'success');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showToast('Error', response.message || 'Failed to approve visitor pass', 'error');
                        }
                    })
                    .fail(function() {
                        showToast('Error', 'An error occurred while approving the visitor pass', 'error');
                    });
            }
        }

        function rejectPass(id) {
            $('#passId').val(id);
            $('#rejectionReason').val('');
            $('#rejectModal').modal('show');
        }

        function submitRejection() {
            var id = $('#passId').val();
            var reason = $('#rejectionReason').val();

            if (!reason) {
                showToast('Error', 'Please provide a reason for rejection', 'error');
                return;
            }

            $.post('@Url.Action("RejectVisitorPass", "Security")', { 
                id: id,
                reason: reason
            })
            .done(function(response) {
                if (response.success) {
                    $('#rejectModal').modal('hide');
                    showToast('Success', 'Visitor pass rejected successfully', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showToast('Error', response.message || 'Failed to reject visitor pass', 'error');
                }
            })
            .fail(function() {
                showToast('Error', 'An error occurred while rejecting the visitor pass', 'error');
            });
        }

        function deletePass(id) {
            if (confirm('Are you sure you want to delete this visitor pass? This action cannot be undone.')) {
                $.post('@Url.Action("DeleteVisitorPass", "Security")', { id: id })
                    .done(function(response) {
                        if (response.success) {
                            showToast('Success', 'Visitor pass deleted successfully', 'success');
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            showToast('Error', response.message || 'Failed to delete visitor pass', 'error');
                        }
                    })
                    .fail(function() {
                        showToast('Error', 'An error occurred while deleting the visitor pass', 'error');
                    });
            }
        }

        function showToast(title, message, type) {
            const toast = $(`
                <div class="toast-notification ${type}">
                    <div class="toast-header">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                        <strong>${title}</strong>
                    </div>
                    <div class="toast-body">${message}</div>
                </div>
            `);
            
            $('body').append(toast);
            setTimeout(() => toast.addClass('show'), 100);
            setTimeout(() => {
                toast.removeClass('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
    </script>
}

@section Styles {
    <style>
        .page-header {
            background: linear-gradient(145deg, #1a1a1a, #222);
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .header-content h1 {
            color: #fff;
            font-size: 2rem;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .description {
            color: #888;
            margin: 0.5rem 0 0;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .search-box {
            position: relative;
            flex: 1;
        }

        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .search-box input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            background: #2d2d2d;
            border: 1px solid #444;
            border-radius: 8px;
            color: #fff;
        }

        .filter-dropdown select {
            padding: 0.75rem 1rem;
            background: #2d2d2d;
            border: 1px solid #444;
            border-radius: 8px;
            color: #fff;
            min-width: 150px;
        }

        .content-section {
            background: #1e1e1e;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .table {
            color: #fff;
            margin: 0;
        }

        .table th {
            background: #2d2d2d;
            border-bottom: 2px solid #444;
            padding: 1rem;
            font-weight: 600;
        }

        .table td {
            padding: 1rem;
            vertical-align: middle;
            border-bottom: 1px solid #444;
        }

        .badge {
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
            font-weight: 500;
        }

        .badge-success { background: #198754; }
        .badge-warning { background: #ffc107; color: #000; }
        .badge-danger { background: #dc3545; }

        .btn-group {
            display: flex;
            gap: 0.5rem;
        }

        .btn-group .btn {
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            margin-right: 0.25rem;
        }

        .btn-group .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-group .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-group .btn i {
            margin-right: 0;
        }

        .download-btn {
            background-color: #28a745;
            border-color: #28a745;
        }

        .download-btn:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

        .rejection-reason {
            font-size: 0.875rem;
            color: #ff6b6b;
            margin-top: 0.25rem;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .modal-content {
            background: #2d2d2d;
            color: #fff;
        }

        .modal-header {
            border-bottom: 1px solid #444;
        }

        .modal-footer {
            border-top: 1px solid #444;
        }

        .form-control {
            background: #1e1e1e;
            border: 1px solid #444;
            color: #fff;
        }

        .form-control:focus {
            background: #1e1e1e;
            border-color: #00bcd4;
            box-shadow: 0 0 0 2px rgba(0, 188, 212, 0.25);
        }

        /* Toast Notification */
        .toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            min-width: 300px;
            background: #2d2d2d;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 1050;
            opacity: 0;
            transform: translateY(-20px);
            transition: all 0.3s ease;
        }

        .toast-notification.show {
            opacity: 1;
            transform: translateY(0);
        }

        .toast-notification.success { border-left: 4px solid #198754; }
        .toast-notification.error { border-left: 4px solid #dc3545; }

        .toast-header {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid #444;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .toast-header i {
            font-size: 1.1rem;
        }

        .toast-notification.success i { color: #198754; }
        .toast-notification.error i { color: #dc3545; }

        .toast-body {
            padding: 0.75rem 1rem;
            color: #fff;
        }

        @@media screen and (max-width: 768px) {
            .header-actions {
                flex-direction: column;
            }

            .search-box, .filter-dropdown {
                width: 100%;
            }

            .filter-dropdown select {
                width: 100%;
            }

            .btn-group {
                flex-wrap: wrap;
            }

            .btn-group .btn {
                flex: 1;
            }
        }
    </style>
} 