@model List<homeowner.Models.ForumPostModel>
@{
    ViewBag.Title = "Forums";
    var currentUserId = ViewBag.UserID?.ToString();

}

<link rel="stylesheet" href="~/css/home.css" />

<link rel="stylesheet" href="~/css/homeowner_forum.css" />



<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>


<div class="container mt-4">


    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="mb-3 mb-md-0">Forums</h1>
        <div class="d-flex align-items-center">
            <select id="filterOptions" class="form-select me-2">
                <option value="today" selected>Today's Posts</option>
                <option value="all">All Posts</option>
                <option value="oldest">Oldest to Newest</option>
                <option value="myPosts">My Posts</option>
            </select>
            <button class="btn btn-primary" id="openPostModal">Create New Post</button>
        </div>
    </div>

    <div id="postsList">
        @if (Model != null && Model.Any())
        {
            @foreach (var post in Model)
            {
                <div class="card mb-3 post-card" data-date="@post.CreatedAt.ToString("yyyy-MM-dd")" data-userid="@post.UserID">

                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title mb-0">@post.Title</h5>
                            <small class="text-muted">
                                <strong>@post.Username</strong> ‚Ä¢ Posted on @post.CreatedAt.ToString("yyyy-MM-dd hh:mm tt")
                            </small>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@post.Content</p>

                        @if (post.Image != null && post.Image.Length > 0)
                        {
                            <img src="data:image/png;base64,@Convert.ToBase64String(post.Image)" class="img-fluid mt-2"
                                alt="Post Image" style="max-width: 100%; height: auto;">
                        }
                        <br>
                        <div class="d-flex align-items-center mt-2">
                            <button class="btn btn-sm btn-outline-success upvote-btn" data-id="@post.PostID">
                                üëç <span class="upvote-count">@post.Upvotes</span>
                            </button>
                            <button class="btn btn-sm btn-outline-danger downvote-btn ms-2" data-id="@post.PostID">
                                üëé <span class="downvote-count">@post.Downvotes</span>
                            </button>
                        </div>


                        <a asp-controller="Forum" asp-action="Details" asp-route-id="@post.PostID"
                            class="btn btn-primary mt-2">View Details</a>

                        <div class="edit-delete-buttons" style="display: none;">
                            <button class="edit-post-btn modern-btn edit-btn" data-id="@post.PostID" data-title="@post.Title"
                                data-content="@post.Content" data-image="@Convert.ToBase64String(post.Image ?? new byte[0])">
                                ‚úèÔ∏è Edit
                            </button>

                            <button class="delete-post-btn modern-btn delete-btn" data-id="@post.PostID">
                                üóëÔ∏è Delete
                            </button>
                        </div>


                    </div>
                </div>
            }
        }
        else
        {
            <p>No posts available.</p>
        }
    </div>

</div>


<!-- Create Post Modal -->
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="postModalLabel">Create Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="postForm" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="postTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="postTitle" name="Title" required>
                    </div>

                    <div class="mb-3">
                        <label for="postContent" class="form-label">Content</label>
                        <textarea class="form-control" id="postContent" name="Content" rows="4" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="postImage" class="form-label">Upload Image</label>
                        <input type="file" class="form-control" id="postImage" name="imageFile">
                        <img id="imagePreview" class="img-fluid mt-2"
                            style="display: none; max-width: 100%; height: auto;">
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Post Modal -->
<div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editPostForm" enctype="multipart/form-data">
                    <input type="hidden" id="editPostID" name="PostID">

                    <div class="mb-3">
                        <label for="editPostTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="editPostTitle" name="Title" required>
                    </div>

                    <div class="mb-3">
                        <label for="editPostContent" class="form-label">Content</label>
                        <textarea class="form-control" id="editPostContent" name="Content" rows="4" required></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Current Image</label>
                        <img id="editImagePreview" class="img-fluid mt-2" style="display: none; max-width: 100%; height: auto;">
                        <button type="button" class="btn btn-danger mt-2" id="deleteImageBtn" style="display: none;">Delete Image</button>
                    </div>

                    <div class="mb-3">
                        <label for="editPostImage" class="form-label">Upload New Image</label>
                        <input type="file" class="form-control" id="editPostImage" name="imageFile">
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>


    $(document).ready(function () {
        let currentUserId = "@(ViewBag.CurrentUserId ?? "null")";
        console.log("Current User ID:", currentUserId);

        $(".post-card").each(function () {
            let postUserId = $(this).data("userid");

            if (postUserId == currentUserId) {
                $(this).find(".edit-delete-buttons").show(); // Show edit/delete buttons for the current user
            }
        });

        function filterPosts() {
            let filter = $("#filterOptions").val();
            let posts = $(".post-card");

            posts.hide();

            if (filter === "today") {
                let today = new Date().toISOString().split("T")[0];
                posts.each(function () {
                    let postDate = $(this).data("date");
                    if (postDate === today) {
                        $(this).show();
                    }
                });
            } else if (filter === "all") {
                posts.show();
            } else if (filter === "oldest") {
                let sortedPosts = posts.sort((a, b) =>
                    new Date($(a).data("date")) - new Date($(b).data("date"))
                );
                $("#postsList").html(sortedPosts);
                posts.show();
            } else if (filter === "myPosts") {
                posts.each(function () {
                    let postUserId = $(this).data("userid"); // Ensure it's a string
                    console.log("Post User ID:", postUserId, "Current User ID:", currentUserId);
                    if (postUserId == currentUserId) { // Compare as string (avoid NaN issues)
                        $(this).show();
                    }
                });
            }
        }

        $("#filterOptions").change(filterPosts);
        filterPosts(); // Run filter on page load
    });



    $(document).ready(function () {
        $("#openPostModal").click(function () {
            $("#postForm")[0].reset();
            $("#imagePreview").hide();
            $("#postModal").modal("show");
        });

        $("#postImage").change(function () {
            var input = this;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#imagePreview").attr("src", e.target.result).show();
                };
                reader.readAsDataURL(input.files[0]);
            }
        });

        $("#postForm").submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);

            $.ajax({
                type: "POST",
                url: "/Forum/CreatePost",
                data: formData,
                processData: false,
                contentType: false,
                success: function () {
                    alert("Post created successfully!");
                    location.reload();
                },
                error: function () {
                    alert("Error creating post.");
                }
            });

            $("#postModal").modal("hide");
        });
    });


    $(document).on("click", ".delete-post-btn", function () {
        var postId = $(this).data("id");
        if (confirm("Are you sure you want to delete this post?")) {
            $.ajax({
                type: "POST",
                url: "/Forum/DeletePost",
                data: { id: postId },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function () {
                    alert("An error occurred while deleting the post.");
                }
            });
        }
    });

    $(document).ready(function () {
        $(document).on("click", ".edit-post-btn", function () {
            let postID = $(this).data("id");
            let title = $(this).data("title");
            let content = $(this).data("content");
            let image = $(this).data("image");

            $("#editPostID").val(postID);
            $("#editPostTitle").val(title);
            $("#editPostContent").val(content);


            if (image) {
                $("#editImagePreview").attr("src", "data:image/png;base64," + image).show();
                $("#deleteImageBtn").attr("data-id", postID).show();
            } else {
                $("#editImagePreview").hide();
                $("#deleteImageBtn").hide();
            }

            $("#editPostModal").modal("show");
        });

        $("#removeImage").change(function () {
            if ($(this).is(":checked")) {
                $("#editImagePreview").hide();
            } else {
                $("#editImagePreview").show();
            }
        });

        $("#editPostImage").change(function () {
            var input = this;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#editImagePreview").attr("src", e.target.result).show();
                };
                reader.readAsDataURL(input.files[0]);
            }
        });

        $("#editPostForm").submit(function (event) {
            event.preventDefault();

            var formData = new FormData(this);

            var removeImage = $("#removeImage").is(":checked");
            formData.append("RemoveImage", removeImage);

            $.ajax({
                type: "POST",
                url: "/Forum/EditPost",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        alert("Post updated successfully!");
                        location.reload();
                    } else {
                        alert("Error updating post.");
                    }
                },
                error: function () {
                    alert("An error occurred while updating the post.");
                }
            });

            $("#editPostModal").modal("hide");
        });

    });

    $(document).ready(function () {
        $("#postsList").on("click", ".upvote-btn, .downvote-btn", function () {
            let button = $(this);
            let postID = button.data("id");
            let voteValue = button.hasClass("upvote-btn") ? 1 : -1;
            let countSpan = button.find("span");

            $.ajax({
                url: '@Url.Action("VotePost", "Forum")',
                type: 'POST',
                data: { postID: postID, voteValue: voteValue },
                success: function (response) {
                    if (response.success) {
                        let oppositeButton = button.hasClass("upvote-btn")
                            ? button.siblings(".downvote-btn")
                            : button.siblings(".upvote-btn");
                        let oppositeCountSpan = oppositeButton.find("span");

                        if (response.message === "Vote removed.") {
                            countSpan.text(parseInt(countSpan.text()) - 1);
                        } else if (response.message === "Vote updated.") {
                            countSpan.text(parseInt(countSpan.text()) + 1);
                            oppositeCountSpan.text(
                                Math.max(parseInt(oppositeCountSpan.text()) - 1, 0)
                            ); // Remove opposite vote if exists
                        } else {
                            countSpan.text(parseInt(countSpan.text()) + 1);
                        }
                    } else {
                        alert(response.message);
                    }
                }
            });
        });
    });


    $(document).ready(function () {
        $("#removeImage").change(function () {
            if (this.checked) {
                let postId = $("#deleteImageBtn").attr("data-id", postID).show();

                $.ajax({
                    type: "POST",
                    url: "/Forum/RemoveImage",
                    data: { postId: postId },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            $("#editImagePreview").hide(); // Hide preview
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function () {
                        alert("Failed to remove image.");
                    }
                });
            }
        });
    });
    document.getElementById("deleteImageBtn").addEventListener("click", function () {
        let postId = this.getAttribute("data-id");

        console.log("Post ID to delete image:", postId); // Log the post ID

        if (!postId) {
            alert("Post ID not found.");
            return;
        }

        if (confirm("Are you sure you want to delete this image?")) {
            let formData = new FormData();
            formData.append("postId", postId);

            fetch("/Forum/DeletePostImage", {
                method: "POST",
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload(); // Refresh the page to reflect changes
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => console.error("Error:", error));
        }
    });

</script>
