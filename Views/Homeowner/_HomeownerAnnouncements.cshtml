@model IEnumerable<homeowner.Models.AnnouncementModel>
@{
    ViewBag.Title = "Homeowner Announcements";
    bool isLoggedIn = ViewBag.IsLoggedIn;
    string username = ViewBag.username;
}

<link rel="stylesheet" href="~/css/home.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <button class="btn btn-primary" onclick="history.back()">Back</button>

<!-- Announcements Section -->
<section class="announcements container">
    <h2 class="mb-4">Latest Announcements</h2>

    <div class="mb-3 mt-3">
        <label for="sortSelect">Sort By:</label>
        <select id="sortSelect" class="form-control d-inline-block w-auto ml-2">
            <option value="newest">Newest First</option>
            <option value="oldest">Oldest First</option>
        </select>
    </div>

    <div id="announcementContainer" class="announcement-list">
        @foreach (var announcement in Model)
        {
            <div class="announcement card mb-3" data-created-at="@announcement.CreatedAt.ToString("o")"
                data-title="@announcement.Title" data-content="@announcement.Content"
                data-date="@announcement.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")">
                <div class="card-body" onclick="openAnnouncementModal(this)">
                    <h3 class="card-title">@announcement.Title</h3>
                    <div class="announcement-content">
                        @if (announcement.Content.Length > 150)
                        {
                            @(announcement.Content.Substring(0, 150) + "...")
                        }
                        else
                        {
                            @announcement.Content
                        }
                    </div>
                    <p class="card-text">
                        <small class="text-muted">
                            Posted on @announcement.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")
                        </small>
                    </p>
                </div>
            </div>
        }
    </div>
</section>

<!-- Modal for Viewing Full Announcement -->
<div class="modal fade" id="announcementModal" tabindex="-1" role="dialog" aria-labelledby="announcementModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="announcementModalLabel">Announcement Title</h5>
            </div>
            <div class="modal-body">
                <p id="announcementContent">Announcement content goes here.</p>
            </div>
            <div class="modal-footer">
                <small id="announcementDate" class="text-muted"></small>
                <button type="button" class="btn btn-primary"
                    onclick="$('#announcementModal').modal('hide');">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const sortSelect = document.getElementById("sortSelect");
        const container = document.getElementById("announcementContainer");
        const cards = Array.from(container.getElementsByClassName("announcement"));

        function sortAnnouncements(order) {
            const sorted = cards.sort((a, b) => {
                const dateA = new Date(a.getAttribute("data-created-at"));
                const dateB = new Date(b.getAttribute("data-created-at"));
                return order === "newest" ? dateB - dateA : dateA - dateB;
            });
            container.innerHTML = "";
            sorted.forEach(card => container.appendChild(card));
        }

        sortSelect.addEventListener("change", function () {
            sortAnnouncements(this.value);
        });
        sortAnnouncements("newest");
    });

    // Open modal and populate with announcement details
    function openAnnouncementModal(element) {
        // The parent element (card) holds our data attributes
        const card = element.parentElement;
        const title = card.getAttribute("data-title");
        const content = card.getAttribute("data-content");
        const date = card.getAttribute("data-date");

        document.getElementById("announcementModalLabel").innerText = title;
        document.getElementById("announcementContent").innerText = content;
        document.getElementById("announcementDate").innerText = date;

        // Show the modal using Bootstrap's jQuery API
        $('#announcementModal').modal('show');
    }
</script>

<style>

/* Global Styles */
body {
    background-color: #121212;
    color: #ffffff;
    font-family: "Poppins", sans-serif;
}

/* Announcements Section */
.announcements {
    padding: 60px 20px;
    text-align: center;
    background: #1e1e1e;
}

.announcements h2 {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 20px;
    color: white;
}

/* Sorting Dropdown */
.sort-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
}

#sortSelect {
    background: #292929;
    color: white;
    border: 1px solid #444;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
}

/* Announcement Cards */
.announcement-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    justify-content: center;
    max-width: 1000px;
    margin: auto;
}

    .announcement {
        background: #242424;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        cursor: pointer;
    }

    .announcement:hover {
        transform: translateY(-5px);
        box-shadow: 0px 8px 20px rgba(0, 188, 212, 0.3);
    }

.announcement .card-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: white;
}

.announcement-content {
    color: #e0e0e0;
    margin-top: 10px;
    font-size: 0.95rem;
    line-height: 1.5;
}

.announcement p {
    margin-top: 15px;
    font-size: 0.85rem;
    color: #bbb;
}

/* Modal Styles */
.modal-content {
    background: #222831;
    border-radius: 12px;
    color: white;
    padding: 20px;
}

.modal-header {
    border-bottom: 1px solid #444;
    background: #1a1a1a;
    border-radius: 12px 12px 0 0;
}

.modal-title {
    font-weight: bold;
    color: white;
}

.modal-footer {
    border-top: 1px solid #444;
}

/* Buttons */
.btn-primary {
    background: #00bcd4;
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    transition: all 0.3s ease-in-out;
}

.btn-primary:hover {
    background: #008ba3;
}

.btn-secondary {
    background: #6c757d;
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
}

.btn-danger {
    background: #dc3545;
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
}

</style>
