@model List<homeowner.Models.ForumPostModel>
@{
    ViewBag.Title = "Forums";
    var currentUserId = ViewBag.UserID?.ToString();
}

<link rel="stylesheet" href="~/css/home.css" />
<link rel="stylesheet" href="~/css/homeowner_forum.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<div class="container mt-4">
    <div class="header-container">
        <div class="page-header">
            <div class="header-content">
                <h2><i class="fas fa-comments"></i> Community Forum</h2>
                <p>Connect and engage with your community</p>
            </div>
            <div class="d-flex align-items-center gap-3">
                <select id="filterOptions" class="form-select">
                    <option value="all" selected>All Posts</option>
                    <option value="myPosts">My Posts</option>
                </select>
                <button class="btn btn-primary" id="openPostModal">
                    <i class="fas fa-plus"></i> New Post
                </button>
            </div>
        </div>
    </div>

    <div id="postsList" class="row">
        @if (Model != null && Model.Any())
        {
            @foreach (var post in Model)
            {
                <div class="col-md-6 mb-3">
                    <div class="card post-card" data-date="@post.CreatedAt.ToString("yyyy-MM-dd")" data-userid="@post.UserID">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title mb-0">@post.Title</h5>
                                <small class="text-muted">
                                    <strong>@post.Username</strong> ‚Ä¢ Posted on @post.CreatedAt.ToString("yyyy-MM-dd hh:mm tt")
                                </small>
                            </div>
                        </div>
                        <div class="card-body">
                            <p class="card-text">@post.Content</p>
                            @if (post.Image != null && post.Image.Length > 0)
                            {
                                <img src="data:image/png;base64,@Convert.ToBase64String(post.Image)" class="img-fluid mt-2 rounded"
                                    alt="Post Image" style="max-width: 100%; height: auto;">
                            }
                            <div class="d-flex align-items-center mt-2">
                                <button class="btn btn-sm btn-outline-success upvote-btn" data-id="@post.PostID">
                                    üëç <span class="upvote-count">@post.Upvotes</span>
                                </button>
                                <button class="btn btn-sm btn-outline-danger downvote-btn ms-2" data-id="@post.PostID">
                                    üëé <span class="downvote-count">@post.Downvotes</span>
                                </button>
                            </div>
                            <a asp-controller="Forum" asp-action="Details" asp-route-id="@post.PostID"
                                class="btn btn-primary mt-2">View Details</a>
                            <div class="edit-delete-buttons" style="display: none;">
                                <button class="edit-post-btn modern-btn edit-btn" data-id="@post.PostID"
                                    data-title="@post.Title" data-content="@post.Content"
                                    data-image="@Convert.ToBase64String(post.Image ?? new byte[0])">
                                    ‚úèÔ∏è Edit
                                </button>
                                <button class="delete-post-btn modern-btn delete-btn" data-id="@post.PostID">
                                    üóëÔ∏è Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <p>No posts available.</p>
            </div>
        }
    </div>
</div>

<!-- Create Post Modal -->
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #2c2c2c; color: #ffffff;">
            <div class="modal-header">
                <h5 class="modal-title" id="postModalLabel">Create Post</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalAlert" class="alert" style="display: none;"></div>
                <form id="postForm" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="Title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="Title" name="Title" required
                            style="background-color: #444; color: #ffffff;">
                    </div>
                    <div class="mb-3">
                        <label for="Content" class="form-label">Content</label>
                        <textarea class="form-control" id="Content" name="Content" rows="4" required
                            style="background-color: #444; color: #ffffff;"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="imageFile" class="form-label">Upload Image (Optional)</label>
                        <input type="file" class="form-control" id="imageFile" name="imageFile" accept="image/*">
                        <img id="imagePreview" class="img-fluid mt-2" style="display: none; max-width: 100%; height: auto;">
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Submit Post</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Post Modal -->
<div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #2c2c2c; color: #ffffff;">
            <div class="modal-header">
                <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editPostForm" enctype="multipart/form-data">
                    <input type="hidden" id="editPostID" name="PostID">
                    <div class="mb-3">
                        <label for="editPostTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="editPostTitle" name="Title" required
                            style="background-color: #444; color: #ffffff;">
                    </div>
                    <div class="mb-3">
                        <label for="editPostContent" class="form-label">Content</label>
                        <textarea class="form-control" id="editPostContent" name="Content" rows="4" required
                            style="background-color: #444; color: #ffffff;"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Current Image</label>
                        <img id="editImagePreview" class="img-fluid mt-2"
                            style="display: none; max-width: 100%; height: auto;">
                        <button type="button" class="btn btn-danger mt-2" id="deleteImageBtn"
                            style="display: none;">Delete Image</button>
                    </div>
                    <div class="mb-3">
                        <label for="editPostImage" class="form-label">Upload New Image</label>
                        <input type="file" class="form-control" id="editPostImage" name="imageFile">
                    </div>
                    <button type="submit" class="btn btn-primary w-100" style="background-color: #007bff;">Save
                        Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="background-color: #2c2c2c; color: #ffffff;">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">
                    <i class="fas fa-exclamation-triangle text-warning"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <p>Are you sure you want to delete this post? This action cannot be undone.</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash"></i> Delete
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div id="toastContainer" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

<script>
    $(document).ready(function () {
        let currentUserId = "@(ViewBag.CurrentUserId ?? "null")";
        console.log("Current User ID:", currentUserId);

        $(".post-card").each(function () {
            let postUserId = $(this).data("userid");

            if (postUserId == currentUserId) {
                $(this).find(".edit-delete-buttons").show(); // Show edit/delete buttons for the current user
            }
        });

        $("#filterOptions").change(function () {
            let filter = $(this).val();
            let posts = $(".post-card");

            posts.hide();

            if (filter === "all") {
                posts.show();
            } else if (filter === "myPosts") {
                posts.each(function () {
                    let postUserId = $(this).data("userid");
                    if (postUserId == currentUserId) {
                        $(this).show();
                    }
                });
            }
        });

        $("#openPostModal").click(function () {
            $("#postForm")[0].reset();
            $("#imagePreview").hide();
            $("#postModal").modal("show");
        });

        $("#imageFile").change(function() {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    $("#imagePreview").attr("src", e.target.result).show();
                };
                reader.readAsDataURL(file);
            } else {
                $("#imagePreview").hide();
            }
        });

        $('#postForm').submit(function(e) {
            e.preventDefault();
            var formData = new FormData(this);
            
            // Show loading state
            const submitBtn = $(this).find('button[type="submit"]');
            submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Posting...');
            
            $.ajax({
                url: '/Forum/CreatePost',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response && response.redirectUrl) {
                        showToast("Post created successfully!", "success");
                        setTimeout(() => {
                            window.location.href = response.redirectUrl;
                        }, 1500);
                    } else {
                        $('#postModal').modal('hide');
                        showToast("Post created successfully!", "success");
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    }
                },
                error: function(xhr, status, error) {
                    submitBtn.prop('disabled', false).text('Submit Post');
                    if (xhr.status === 200) {
                        // If the status is 200 but it's in error callback, post was likely successful
                        $('#postModal').modal('hide');
                        showToast("Post created successfully!", "success");
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        showToast("Error creating post. Please try again.", "error");
                    }
                },
                complete: function() {
                    // Reset form state after short delay
                    setTimeout(() => {
                        submitBtn.prop('disabled', false).text('Submit Post');
                    }, 1000);
                }
            });
        });

        $(document).on("click", ".delete-post-btn", function () {
            const postId = $(this).data("id");
            const postCard = $(this).closest('.col-md-6');
            
            // Store the postId and postCard in the modal for later use
            $('#deleteConfirmModal').data('postId', postId).data('postCard', postCard);
            $('#deleteConfirmModal').modal('show');
        });

        // Add this new click handler for the confirm delete button
        $('#confirmDeleteBtn').click(function() {
            const modal = $('#deleteConfirmModal');
            const postId = modal.data('postId');
            const postCard = modal.data('postCard');
            
            // Show loading state
            const btn = $(this);
            btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Deleting...');
            
            $.ajax({
                type: "POST",
                url: "/Forum/DeletePost",
                data: { id: postId },
                success: function (response) {
                    if (response.success) {
                        modal.modal('hide');
                        postCard.fadeOut(300, function() {
                            $(this).remove();
                            showToast("Post deleted successfully!", "success");
                            // Check if no posts remain
                            if ($('.post-card').length === 0) {
                                $('#postsList').html('<p>No posts available.</p>');
                            }
                            setTimeout(() => {
                                location.reload();
                            }, 1500);
                        });
                    } else {
                        showToast("Error: " + response.message, "error");
                    }
                },
                error: function () {
                    showToast("An error occurred while deleting the post.", "error");
                },
                complete: function() {
                    btn.prop('disabled', false).html('<i class="fas fa-trash"></i> Delete');
                    modal.modal('hide');
                }
            });
        });

        $(document).on("click", ".edit-post-btn", function () {
            let postID = $(this).data("id");
            let title = $(this).data("title");
            let content = $(this).data("content");
            let image = $(this).data("image");

            $("#editPostID").val(postID);
            $("#editPostTitle").val(title);
            $("#editPostContent").val(content);
            if (image) {
                $("#editImagePreview").attr("src", "data:image/png;base64," + image).show();
            } else {
                $("#editImagePreview").hide();
            }

            $("#editPostModal").modal("show");
        });

        $("#editPostForm").submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            const postId = $("#editPostID").val();
            
            // Show loading state
            const submitBtn = $(this).find('button[type="submit"]');
            submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');

            $.ajax({
                type: "POST",
                url: "/Forum/EditPost",
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $('#editPostModal').modal('hide');
                        showToast("Post updated successfully!", "success");
                        
                        // Update the post card content without reload
                        const postCard = $('.post-card').filter(function() {
                            return $(this).find('.edit-post-btn').data('id') == postId;
                        });
                        
                        postCard.find('.card-title').text(formData.get('Title'));
                        postCard.find('.card-text').text(formData.get('Content'));
                        
                        // Update image if provided
                        if (response.imageUrl) {
                            if (postCard.find('img.img-fluid').length) {
                                postCard.find('img.img-fluid').attr('src', response.imageUrl);
                            } else {
                                postCard.find('.card-text').after(`<img src="${response.imageUrl}" class="img-fluid mt-2 rounded" alt="Post Image" style="max-width: 100%; height: auto;">`);
                            }
                        }
                        
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        showToast("Error updating post: " + response.message, "error");
                    }
                },
                error: function (xhr) {
                    if (xhr.responseText.includes("Packets larger than max_allowed_packet")) {
                        showToast("The image is too large to upload. Please choose a smaller image.", "error");
                    } else {
                        showToast("An error occurred while updating the post.", "error");
                    }
                },
                complete: function() {
                    submitBtn.prop('disabled', false).text('Save Changes');
                }
            });

            $("#editPostModal").modal("hide");
        });

        // Upvote or downvote a post
        $('#postsList').on('click', '.upvote-btn, .downvote-btn', function () {
            let button = $(this);
            let postID = button.data('id');
            let voteValue = button.hasClass('upvote-btn') ? 1 : -1;

            $.ajax({
                url: '@Url.Action("VotePost", "Forum")',
                type: 'POST',
                data: { postID: postID, voteValue: voteValue },
                success: function (response) {
                    if (response.success) {
                        let upvoteCount = button.closest('.post-card').find('.upvote-count');
                        let downvoteCount = button.closest('.post-card').find('.downvote-count');

                        upvoteCount.text(response.upvotes);
                        downvoteCount.text(response.downvotes);

                        showToast('Vote recorded successfully!', 'success');
                    } else {
                        showToast(response.message, 'error');
                    }
                }
            });
        });

        // Toast notification function
        function showToast(message, type) {
            const toast = $('<div>').addClass('toast ' + type).text(message);
            $('body').append(toast);
            setTimeout(() => toast.addClass('show'), 100);
            setTimeout(() => {
                toast.removeClass('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // Add these new handlers for the delete confirmation modal
        $('.btn-close, .btn[data-bs-dismiss="modal"]').click(function() {
            $('#deleteConfirmModal').modal('hide');
        });

        $('#deleteConfirmModal').on('hidden.bs.modal', function () {
            const btn = $('#confirmDeleteBtn');
            btn.prop('disabled', false).html('<i class="fas fa-trash"></i> Delete');
        });
    });
</script>

<!-- Toast Notification -->
<div id="toastContainer" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

<style>
    body {
        background-color: #0d1117; /* GitHub dark theme background */
        color: #ffffff;
        font-family: 'Poppins', sans-serif;
    }

    .container {
        position: relative;
        padding: 2rem;
        background-color: #161b22; /* GitHub dark theme container */
        border-radius: 20px;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
    }

    .page-header {
        display: flex;
        align-items: center;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: #21262d; /* GitHub dark theme header */
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .header-content {
        flex: 1;
    }

    .page-header h2 {
        color: #fff;
        font-size: 1.8rem;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.8rem;
    }

    .page-header p {
        color: #8b949e; /* GitHub dark theme text */
        margin: 0.5rem 0 0 0;
        font-size: 1rem;
    }

    /* Modal Styles */
    .modal-content {
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
    }

    .modal-header {
        background: #2d333b;
        border-bottom: 1px solid #30363d;
        padding: 1.5rem;
    }

    .modal-title {
        color: #fff;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .modal-body {
        background: #21262d;
        padding: 1.5rem;
    }

    .modal-footer {
        background: #2d333b;
        border-top: 1px solid #30363d;
        padding: 1rem;
    }

    .form-label {
        color: #c9d1d9;
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .form-control {
        background: #2d333b;
        border: 1px solid #30363d;
        color: #c9d1d9;
        border-radius: 6px;
    }

    .form-control:focus {
        background: #2d333b;
        border-color: #58a6ff;
        color: #c9d1d9;
        box-shadow: 0 0 0 3px rgba(88, 166, 255, 0.2);
    }

    .form-select {
        background-color: #2d333b;
        border: 1px solid #30363d;
        color: #c9d1d9;
    }

    .form-select:focus {
        border-color: #58a6ff;
        box-shadow: 0 0 0 3px rgba(88, 166, 255, 0.2);
    }

    .btn-close {
        color: #8b949e;
        opacity: 0.8;
        filter: invert(1) grayscale(100%) brightness(200%);
    }

    .btn-close:hover {
        color: #fff;
        opacity: 1;
    }

    .btn-primary {
        background: #238636;
        border: 1px solid rgba(240,246,252,0.1);
        color: #fff;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

    .btn-primary:hover {
        background: #2ea043;
        transform: translateY(-1px);
    }

    .btn-secondary {
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
    }

    .btn-secondary:hover {
        background: #2d333b;
        border-color: #58a6ff;
        color: #fff;
    }

    /* Post Cards */
    .post-card {
        background: #2d333b;
        border-radius: 10px;
        overflow: hidden;
        transition: transform 0.3s ease;
        border: 1px solid #30363d;
        margin-bottom: 1.5rem;
    }

    .post-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    }

    .card-header {
        background: #2d333b;
        border-bottom: 1px solid #30363d;
        padding: 1.2rem;
    }

    .card-title {
        color: #fff;
        font-size: 1.2rem;
        margin: 0;
    }

    .text-muted {
        color: #8b949e !important;
    }

    .card-body {
        padding: 1.2rem;
        background: #2d333b;
    }

    .card-text {
        color: #c9d1d9;
        margin-bottom: 1rem;
        line-height: 1.6;
    }

    /* Vote Buttons */
    .upvote-btn, .downvote-btn {
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

    .upvote-btn:hover {
        background: #238636;
        border-color: #238636;
        color: #fff;
    }

    .downvote-btn:hover {
        background: #f85149;
        border-color: #f85149;
        color: #fff;
    }

    /* Edit/Delete Buttons */
    .edit-post-btn, .delete-post-btn {
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        transition: all 0.2s ease;
        margin-right: 0.5rem;
    }

    .edit-post-btn:hover {
        background: #58a6ff;
        border-color: #58a6ff;
        color: #fff;
    }

    .delete-post-btn:hover {
        background: #f85149;
        border-color: #f85149;
        color: #fff;
    }

    /* Toast Notification */
    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 1rem 2rem;
        border-radius: 10px;
        color: white;
        font-weight: 500;
        transform: translateX(120%);
        transition: transform 0.3s ease;
        z-index: 9999;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .toast.show {
        transform: translateX(0);
    }

    .toast.success {
        background: linear-gradient(45deg, #238636, #2ea043);
    }

    .toast.error {
        background: linear-gradient(45deg, #f85149, #f85149);
    }

    /* Filter Dropdown */
    #filterOptions {
        background: #2d333b;
        border: 1px solid #30363d;
        color: #c9d1d9;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        margin-right: 1rem;
    }

    #filterOptions:focus {
        border-color: #58a6ff;
        box-shadow: 0 0 0 3px rgba(88, 166, 255, 0.2);
    }
</style>
