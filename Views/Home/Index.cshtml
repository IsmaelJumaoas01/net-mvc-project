@model IEnumerable<homeowner.Models.AnnouncementModel>

@{
    ViewBag.Title = "Welcome to Your Subdivision";
    bool isLoggedIn = ViewBag.IsLoggedIn ?? false;
    string username = ViewBag.Username ?? "Guest";
}

<link rel="stylesheet" href="~/css/home.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>




@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="custom-alert success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorAlert" class="custom-alert error">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Hero Section -->
<div class="hero"
    style="background-image: url('/images/hero-bg.jpg'); background-size: cover; background-position: center;">
    <div class="overlay">
        <h1>Welcome to Our Subdivision</h1>
        <p>Your community portal for announcements, payments, reservations, and more.</p>
        <div class="hero-buttons">
            @if (!isLoggedIn)
            {
                <a data-toggle="modal" data-target="#loginModal" class="btn btn-primary">Login</a>
                <a data-toggle="modal" data-target="#registerModal" class="btn btn-secondary">Register</a>
            }
            else
            {
                <div class="dashboard">
                    <p>Welcome back, @username!</p>
                    <a class="btn btn-danger" asp-controller="Homeowner" asp-action="Profile">Go to Dashboard</a>
                </div>
            }
            <!-- Changelog Button: visible for everyone -->
            <a data-toggle="modal" data-target="#readmeModal" class="btn btn-info ml-2">Changelog</a>
        </div>
    </div>
</div>


<!-- Announcements Section -->
<section class="announcements">
    <h2>Latest Announcements</h2>
    <div class="announcement-list">
        @if (ViewBag.Announcements != null && ViewBag.Announcements.Count > 0)
        {
            @foreach (var announcement in ViewBag.Announcements)
            {
                <div class="announcement">
                    <h3>@announcement.Title</h3>
                    <p>@announcement.Content</p>
                    <p><small>Posted on @announcement.CreatedAt</small></p>
                </div>
            }
        }
        else
        {
            <p>No announcements available.</p>
        }
    </div>
</section>

<!-- Features Section -->
<section class="features">
    <h2>Explore Our Community Services</h2>
    <div class="feature-list">
        <div class="feature">
            <i class="fas fa-newspaper fa-3x"></i>
            <h3>Community News</h3>
            <p>Stay updated with the latest announcements and events.</p>
            <a href="@Url.Action("Index", "News")" class="btn btn-primary" onclick="return checkLogin()">View News</a>
        </div>
        <div class="feature">
            <i class="fas fa-credit-card fa-3x"></i>
            <h3>Online Payments</h3>
            <p>Pay your dues and fees securely through our portal.</p>
            <a href="@Url.Action("Index", "Payments")" class="btn btn-primary" onclick="return checkLogin()">Make a
                Payment</a>
        </div>
        <div class="feature">
            <i class="fas fa-calendar-alt fa-3x"></i>
            <h3>Facility Booking</h3>
            <p>Reserve function halls, sports courts, and other amenities.</p>
            <a href="@Url.Action("Index", "FacilityBooking")" class="btn btn-primary" onclick="return checkLogin()">Book
                a Facility</a>
        </div>
        <div class="feature">
            <i class="fas fa-tools fa-3x"></i>
            <h3>Service Requests</h3>
            <p>Request maintenance, security assistance, and other services.</p>
            <a href="@Url.Action("Index", "ServiceRequest")" class="btn btn-primary"
                onclick="return checkLogin()">Request a Service</a>
        </div>
    </div>
</section>

<!-- Login & Register Modals (if applicable) -->
<div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body p-0">
                @await Html.PartialAsync("_LoginPartial")
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body p-0">
                @await Html.PartialAsync("_RegisterPartial")
            </div>
        </div>
    </div>
</div>

<p>@TempData["ShowLoginRequiredModal"]</p>


<!-- Include the Readme Modal Partial -->
@await Html.PartialAsync("_ReadmeModal")

<script>

    $(document).ready(function () {
        var showModal = '@(TempData["ShowLoginRequiredModal"]?.ToString().ToLower() ?? "false")';
        if (showModal === 'true') {
            $('#loginRequiredModal').modal('show');
        }
    });

    function checkLogin() {
        var isLoggedIn = @Html.Raw(isLoggedIn.ToString().ToLower());
        if (!isLoggedIn) {
            alert("You need to be logged in to access this service.");
            return false;
        }
        return true;
    }
</script>

<style>
   body {
  
    color: #ffffff; /* White text for readability */
}

.navbar {
    background: #121212; /* Slightly lighter black for navbar */
}

.hero {
    position: relative;
    color: white;
    text-align: center;
    padding: 100px 20px;
}

.hero .overlay {
    background: rgba(43, 49, 55, 0.8); /* Dark gray with transparency */
    padding: 50px;
}

.auth-buttons .btn,
.dashboard .btn {
    margin: 10px;
}

.features {
    padding: 50px 20px;
    text-align: center;
    background: #1a1a1a; /* Dark gray for features section */
}

.feature-list {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
}

.feature {
    flex: 1 1 200px;
    margin: 20px;
    padding: 20px;
    background: #252525; /* Slightly lighter gray for contrast */
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

.feature i {
    color: #007bff;
    margin-bottom: 10px;
}

.announcements {
    padding: 50px 20px;
    text-align: center;
    background: #1e1e1e; /* Dark gray */
}

.announcement-list {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.announcement {
    background: #2c2c2c; /* Slightly lighter than section */
    padding: 20px;
    margin: 10px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    width: 80%;
}

.modal-content {
    background: #222831; /* Dark Blue-Gray for modals */
}

.btn-primary {
    background: #007bff;
    border-color: #007bff;
}

.btn-secondary {
    background: #6c757d;
    border-color: #6c757d;
}

.btn-danger {
    background: #dc3545;
    border-color: #dc3545;
}
table {
    width: 100%;
    border-collapse: collapse;
    background-color: #1a1a1a; /* Dark gray for blending */
    color: white;
    border-radius: 8px;
    overflow: hidden;
}

th {
    background-color: #2b2b2b; /* Slightly lighter dark gray */
    color: white;
    padding: 10px;
    text-align: left;
}

tr {
    background-color: #1f1f1f; /* Blended dark gray */
    color: white; /* Keep text readable */
    transition: background 0.3s;
}

tr:nth-child(even) {
    background-color: #292929; /* Slightly lighter gray for alternating rows */
}

tr:hover {
    background-color: #333; /* Highlight effect on hover */
}

td {
    padding: 10px;
    border: 1px solid #444;
}

small, p small {
    color: #a0a0a0; /* Light gray for timestamps and small text */
}

</style>

<script>

    (function () {
        window.history.pushState(null, "", window.location.href);
        window.onpopstate = function () {
            window.history.pushState(null, "", window.location.href);
        };
    })();
</script>
