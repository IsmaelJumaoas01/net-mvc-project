@model List<homeowner.Models.PollModel>
@{
    ViewData["Title"] = "Polls & Surveys";
    bool isAdmin = ViewBag.IsAdmin;
    bool isStaff = ViewBag.IsStaff;
}

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<div class="poll-container">
    <div class="poll-header">
        <div class="header-content">
            <div class="header-icon">
                <i class="fas fa-poll"></i>
            </div>
            <div class="header-text">
                <h2>Polls & Surveys</h2>
                <p>View and participate in community polls</p>
            </div>
        </div>
        @if (isAdmin || isStaff)
        {
            <div class="header-actions">
                <button class="btn btn-primary" data-toggle="modal" data-target="#createPollModal">
                    <i class="fas fa-plus"></i> Create New Poll
                </button>
            </div>
        }
    </div>

    <div class="polls-grid">
        @if (Model != null && Model.Any())
        {
            foreach (var poll in Model)
            {
                <div class="poll-card" data-poll-id="@poll.PollID">
                    <div class="poll-card-header">
                        <h3>@poll.Title</h3>
                        <div class="poll-meta">
                            <span class="date">
                                <i class="fas fa-calendar"></i> @poll.StartDate.ToString("MMM dd, yyyy")
                            </span>
                            <span class="votes">
                                <i class="fas fa-users"></i> @poll.ResponseCount votes
                            </span>
                            @if (poll.HasVoted)
                            {
                                <span class="voted-badge">
                                    <i class="fas fa-check-circle"></i> You voted
                                </span>
                            }
                        </div>
                    </div>
                    <div class="poll-card-body">
                        <p class="poll-description">@poll.Description</p>
                        <div class="poll-options">
                            @foreach (var option in poll.Options)
                            {
                                <div class="poll-option @(poll.HasVoted ? "voted" : "")">
                                    <button class="vote-btn @(poll.HasVoted ? "voted" : "")" 
                                            data-option-id="@option.OptionID" 
                                            @(poll.HasVoted ? "disabled" : "")>
                                        <div class="option-content">
                                            <span class="option-text">@option.OptionText</span>
                                            <span class="vote-count">@option.VoteCount votes</span>
                                        </div>
                                        <div class="vote-progress-container">
                                            <div class="vote-progress" style="width: @(poll.ResponseCount > 0 ? (option.VoteCount * 100 / poll.ResponseCount) : 0)%">
                                                <span class="vote-percentage">
                                                    @(poll.ResponseCount > 0 ? Math.Round((double)option.VoteCount * 100 / poll.ResponseCount, 1) : 0)%
                                                </span>
                                            </div>
                                        </div>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                    @if (isAdmin || isStaff)
                    {
                        <div class="poll-card-footer">
                            <button class="btn btn-danger delete-poll" data-poll-id="@poll.PollID">
                                <i class="fas fa-trash"></i> Delete Poll
                            </button>
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <div class="no-polls">
                <i class="fas fa-poll"></i>
                <p>No polls available</p>
                @if (isAdmin || isStaff)
                {
                    <button class="btn btn-primary" data-toggle="modal" data-target="#createPollModal">
                        <i class="fas fa-plus"></i> Create First Poll
                    </button>
                }
            </div>
        }
    </div>
</div>

<!-- Create Poll Modal -->
@if (isAdmin || isStaff)
{
    <div class="modal fade" id="createPollModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-plus-circle"></i> Create New Poll
                    </h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="createPollForm">
                        <div class="form-group">
                            <label>Poll Title</label>
                            <input type="text" class="form-control" name="Title" required>
                        </div>
                        <div class="form-group">
                            <label>Description</label>
                            <textarea class="form-control" name="Description" rows="3" required></textarea>
                        </div>
                        <div class="form-group">
                            <label>Options</label>
                            <div id="optionsContainer">
                                <div class="option-input">
                                    <input type="text" class="form-control" name="options[]" required>
                                    <button type="button" class="btn btn-icon remove-option">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div class="option-input">
                                    <input type="text" class="form-control" name="options[]" required>
                                    <button type="button" class="btn btn-icon remove-option">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                            <button type="button" class="btn btn-secondary" id="addOption">
                                <i class="fas fa-plus"></i> Add Option
                            </button>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-check"></i> Create Poll
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<style>
    body {
        background-color: #0d1117;
        color: #c9d1d9;
        font-family: 'Poppins', sans-serif;
    }

    .poll-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .poll-header {
        background: linear-gradient(145deg, #161b22, #1c2128);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-content {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    .header-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(45deg, #58a6ff, #238636);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 15px rgba(88, 166, 255, 0.2);
    }

    .header-icon i {
        font-size: 1.8rem;
        color: white;
    }

    .header-text h2 {
        color: #ffffff;
        font-size: 1.8rem;
        margin: 0;
        font-weight: 600;
    }

    .header-text p {
        color: #8b949e;
        margin: 0.5rem 0 0 0;
        font-size: 1rem;
    }

    .polls-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 1.5rem;
        align-items: start;
    }

    .poll-card {
        background: linear-gradient(145deg, #1a1f24, #21262d);
        border-radius: 15px;
        overflow: hidden;
        border: 1px solid #30363d;
        transition: all 0.3s ease;
        position: relative;
    }

    .poll-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        border-color: #58a6ff;
    }

    .poll-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #58a6ff, #1f6feb);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .poll-card:hover::before {
        opacity: 1;
    }

    .poll-card-header {
        padding: 1.5rem;
        border-bottom: 1px solid #30363d;
        background: linear-gradient(145deg, #21262d, #2d333b);
    }

    .poll-card-header h3 {
        color: #ffffff;
        font-size: 1.2rem;
        margin: 0 0 1rem 0;
        font-weight: 600;
    }

    .poll-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        color: #8b949e;
        font-size: 0.9rem;
    }

    .poll-meta span {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .voted-badge {
        background: linear-gradient(45deg, #238636, #2ea043);
        color: #ffffff;
        padding: 0.2rem 0.75rem;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .poll-card-body {
        padding: 1.5rem;
    }

    .poll-description {
        color: #c9d1d9;
        margin-bottom: 1.5rem;
        line-height: 1.6;
    }

    .poll-options {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .poll-option {
        width: 100%;
    }

    .vote-btn {
        width: 100%;
        background: #21262d;
        border: 1px solid #30363d;
        padding: 1rem;
        border-radius: 8px;
        color: #c9d1d9;
        text-align: left;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

    .vote-btn:hover:not(:disabled) {
        background: #2d333b;
        border-color: #58a6ff;
    }

    .vote-btn.voted {
        background: #1f6feb;
        border-color: #1f6feb;
        color: #ffffff;
        cursor: default;
    }

    .option-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        z-index: 1;
    }

    .vote-progress-container {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 100%;
        background: #161b22;
        border-radius: 8px;
        overflow: hidden;
    }

    .vote-progress {
        height: 100%;
        background: linear-gradient(90deg, rgba(88, 166, 255, 0.2), rgba(31, 111, 235, 0.2));
        transition: width 0.3s ease;
        position: relative;
    }

    .vote-percentage {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        font-size: 0.9rem;
        font-weight: 500;
    }

    .poll-card-footer {
        padding: 1.5rem;
        border-top: 1px solid #30363d;
        background: linear-gradient(145deg, #21262d, #2d333b);
    }

    .no-polls {
        grid-column: 1 / -1;
        text-align: center;
        padding: 4rem;
        background: linear-gradient(145deg, #161b22, #1c2128);
        border-radius: 15px;
        border: 1px solid #30363d;
    }

    .no-polls i {
        font-size: 3rem;
        color: #58a6ff;
        margin-bottom: 1rem;
    }

    .no-polls p {
        color: #8b949e;
        margin-bottom: 1.5rem;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(45deg, #58a6ff, #1f6feb);
        border: none;
        color: #ffffff;
    }

    .btn-primary:hover {
        background: linear-gradient(45deg, #1f6feb, #58a6ff);
        transform: translateY(-2px);
    }

    .btn-danger {
        background: linear-gradient(45deg, #f85149, #da3633);
        border: none;
        color: #ffffff;
    }

    .btn-danger:hover {
        background: linear-gradient(45deg, #da3633, #f85149);
        transform: translateY(-2px);
    }

    .btn-secondary {
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
        margin-top: 1rem;
    }

    .btn-secondary:hover {
        background: #2d333b;
        border-color: #58a6ff;
    }

    .modal-content {
        background: #21262d;
        border: 1px solid #30363d;
        border-radius: 12px;
    }

    .modal-header {
        border-bottom: 1px solid #30363d;
        padding: 1.5rem;
    }

    .modal-title {
        color: #ffffff;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .modal-title i {
        color: #58a6ff;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        color: #c9d1d9;
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        background: #0d1117;
        border: 1px solid #30363d;
        color: #c9d1d9;
        border-radius: 6px;
        padding: 0.75rem 1rem;
    }

    .form-control:focus {
        border-color: #58a6ff;
        box-shadow: 0 0 0 2px rgba(88, 166, 255, 0.2);
    }

    .option-input {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .btn-icon {
        padding: 0.75rem;
        border-radius: 6px;
        background: #21262d;
        border: 1px solid #30363d;
        color: #c9d1d9;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-icon:hover {
        background: #da3633;
        border-color: #f85149;
        color: #ffffff;
    }

    .close {
        color: #8b949e;
        opacity: 1;
        transition: all 0.3s ease;
    }

    .close:hover {
        color: #ffffff;
        opacity: 1;
    }

    @@media (max-width: 768px) {
        .poll-header {
            flex-direction: column;
            gap: 1.5rem;
        }

        .header-actions {
            width: 100%;
        }

        .polls-grid {
            grid-template-columns: 1fr;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }

        .poll-meta {
            flex-direction: column;
            gap: 0.5rem;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add option
            $('#addOption').click(function() {
                const optionInput = `
                    <div class="option-input">
                        <input type="text" class="form-control" name="options[]" required>
                        <button type="button" class="btn btn-icon remove-option">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>`;
                $('#optionsContainer').append(optionInput);
            });

            // Remove option
            $(document).on('click', '.remove-option', function() {
                if ($('.option-input').length > 2) {
                    $(this).closest('.option-input').remove();
                } else {
                    showToast('At least two options are required', 'error');
                }
            });

            // Create poll
            $('#createPollForm').submit(function(e) {
                e.preventDefault();
                const options = [];
                $('input[name="options[]"]').each(function() {
                    options.push($(this).val());
                });

                $.ajax({
                    url: '@Url.Action("Create", "Poll")',
                    type: 'POST',
                    data: {
                        Title: $('input[name="Title"]').val(),
                        Description: $('textarea[name="Description"]').val(),
                        options: options
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('Poll created successfully!', 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(response.message, 'error');
                        }
                    }
                });
            });

            // Vote
            $('.vote-btn').click(function() {
                const optionId = $(this).data('option-id');
                const pollId = $(this).closest('.poll-card').data('poll-id');

                $.ajax({
                    url: '@Url.Action("Vote", "Poll")',
                    type: 'POST',
                    data: { pollId: pollId, optionId: optionId },
                    success: function(response) {
                        if (response.success) {
                            showToast('Vote recorded successfully!', 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(response.message, 'error');
                        }
                    }
                });
            });

            // Delete poll
            $('.delete-poll').click(function() {
                const pollId = $(this).data('poll-id');
                if (confirm('Are you sure you want to delete this poll?')) {
                    $.ajax({
                        url: '@Url.Action("DeletePoll", "Poll")',
                        type: 'POST',
                        data: { pollId: pollId },
                        success: function(response) {
                            if (response.success) {
                                showToast('Poll deleted successfully!', 'success');
                                setTimeout(() => location.reload(), 1000);
                            } else {
                                showToast(response.message, 'error');
                            }
                        }
                    });
                }
            });

            // Toast notification function
            function showToast(message, type) {
                const toast = $('<div>').addClass('toast ' + type).text(message);
                $('body').append(toast);
                setTimeout(() => toast.addClass('show'), 100);
                setTimeout(() => {
                    toast.removeClass('show');
                    setTimeout(() => toast.remove(), 300);
                }, 3000);
            }
        });
    </script>
} 