@{
    ViewBag.Title = "Book a Facility";
    var facilities = ViewBag.Facilities as List<homeowner.Models.FacilityModel>;
    var reservations = ViewBag.UserReservations as List<homeowner.Models.FacilityReservationModel>;

    // Pagination Logic
    int itemsPerPage = 3;
    int currentPage = Convert.ToInt32(Context.Request.Query["page"]) > 0 ? Convert.ToInt32(Context.Request.Query["page"]) : 1;
    int totalItems = reservations.Count;
    int totalPages = (int)Math.Ceiling((double)totalItems / itemsPerPage);
    var paginatedReservations = reservations
        .Skip((currentPage - 1) * itemsPerPage)
        .Take(itemsPerPage)
        .ToList();

    // Generate time options using DateTime
    var timeOptions = new List<string>();
    var baseDate = DateTime.Today;
    var startTime = baseDate.AddHours(7).AddMinutes(30);
    var endTime = baseDate.AddHours(22);

    for (var time = startTime; time <= endTime; time = time.AddMinutes(30))
    {
        timeOptions.Add(time.ToString("HH:mm"));
    }
    
    var today = DateTime.Now.ToString("yyyy-MM-dd");
}

<head>
    <link rel="stylesheet" href="~/css/home.css" />
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
</head>

<div class="container mt-4">
    <div class="welcome-section">
        <div class="welcome-content">
            <h1><i class="fas fa-umbrella-beach"></i> Our Amenities</h1>
            <p>Experience luxury and convenience with our world-class facilities. Book your spot today!</p>
        </div>
    </div>

    <div class="facilities-grid">
        @foreach (var facility in facilities)
        {
            string imagePath = facility.FacilityName.ToLower().Contains("basketball") ? "https://images.unsplash.com/photo-1519861531473-9200262188bf?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("pool") ? "https://images.unsplash.com/photo-1576013551627-0cc20b96c2a7?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("tennis") ? "https://images.unsplash.com/photo-1595435934249-5df7ed86e1c0?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("fitness") ? "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("hall") ? "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("party") ? "https://images.unsplash.com/photo-1519671482749-fd09be7ccebf?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("bbq") ? "https://images.unsplash.com/photo-1555939594-58d7cb561ad1?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("playground") ? "https://images.unsplash.com/photo-1560713781-d983d6f5b4e1?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("garden") ? "https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?w=800&auto=format&fit=crop" :
                             facility.FacilityName.ToLower().Contains("parking") ? "https://images.unsplash.com/photo-1573348722427-f1d6819fdf98?w=800&auto=format&fit=crop" :
                             "https://images.unsplash.com/photo-1560090995-01632a28895b?w=800&auto=format&fit=crop";

            <div class="facility-card" onclick="selectFacility('@facility.FacilityID', '@facility.FacilityName')" data-aos="fade-up">
                <div class="facility-image" style="background-image: url('@imagePath')">
                    <div class="facility-overlay">
                        <h3>@facility.FacilityName</h3>
                        <button class="btn btn-book">
                            <i class="fas fa-calendar-check"></i> Book Now
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Your Reservations Section -->
    <div class="reservations-section">
        <h2 class="section-title" data-aos="fade-up">
            <i class="fas fa-calendar-alt"></i> Your Reservations
        </h2>
        
        <div class="reservation-timeline" data-aos="fade-up">
            @if (paginatedReservations.Any())
            {
                foreach (var res in paginatedReservations)
                {
                    string statusClass = res.Status.ToLower();
                    string statusIcon = res.Status == "Confirmed" ? "check-circle" :
                                      res.Status == "Pending" ? "clock" : "times-circle";
                    
                    string imagePath = res.FacilityName.ToLower().Contains("basketball") ? "https://images.unsplash.com/photo-1546519638-68e109acd27b?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("pool") ? "https://images.unsplash.com/photo-1576013551627-0cc20b96c2a7?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("tennis") ? "https://images.unsplash.com/photo-1595435934249-5df7ed86e1c0?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("fitness") ? "https://images.unsplash.com/photo-1534438327276-14e5300c3a48?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("hall") ? "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("party") ? "https://images.unsplash.com/photo-1519671482749-fd09be7ccebf?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("bbq") ? "https://images.unsplash.com/photo-1555939594-58d7cb561ad1?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("playground") ? "https://images.unsplash.com/photo-1560713781-d983d6f5b4e1?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("garden") ? "https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?w=800&auto=format&fit=crop" :
                                     res.FacilityName.ToLower().Contains("parking") ? "https://images.unsplash.com/photo-1573348722427-f1d6819fdf98?w=800&auto=format&fit=crop" :
                                     "https://images.unsplash.com/photo-1560090995-01632a28895b?w=800&auto=format&fit=crop";
                    
                    <div class="timeline-card @statusClass">
                        <div class="timeline-icon">
                            <i class="fas fa-@statusIcon"></i>
                        </div>
                        <div class="timeline-content">
                            <div class="facility-img" style="background-image: url('@imagePath')">
                            </div>
                            <div class="details">
                                <h4>@res.FacilityName</h4>
                                <div class="reservation-details">
                                    <div class="detail-item">
                                        <i class="fas fa-calendar-day"></i>
                                        <span>@res.ReservationDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="fas fa-clock"></i>
                                        <span>@DateTime.Today.Add(res.StartTime).ToString("HH:mm") - @DateTime.Today.Add(res.EndTime).ToString("HH:mm")</span>
                                    </div>
                                </div>
                                <span class="status-badge @statusClass">@res.Status</span>
                            </div>
                        </div>
                    </div>
                }

                @if (totalPages > 1)
                {
                    <div class="pagination-container" data-aos="fade-up">
                        <div class="pagination">
                            @if (currentPage > 1)
                            {
                                <a href="?page=@(currentPage - 1)" class="page-link">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            }

                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <a href="?page=@i" class="page-link @(i == currentPage ? "active" : "")">@i</a>
                            }

                            @if (currentPage < totalPages)
                            {
                                <a href="?page=@(currentPage + 1)" class="page-link">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-reservations" data-aos="fade-up">
                    <i class="fas fa-calendar-times"></i>
                    <p>No reservations found</p>
                    <span>Book a facility to get started!</span>
                </div>
            }
        </div>
    </div>
</div>

<!-- Booking Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-calendar-check"></i> Book a Facility
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="bookFacilityForm">
                    <input type="hidden" id="selectedFacilityId" name="facilityId">
                    <div class="selected-facility">
                        <h6>Selected Facility:</h6>
                        <p id="selectedFacilityName">Please select a facility</p>
                    </div>

                    <div class="form-group">
                        <label for="reservationDate">
                            <i class="fas fa-calendar"></i> Date
                        </label>
                        <input type="date" id="reservationDate" class="form-control" required min="@today">
                    </div>

                    <div class="time-selection">
                        <div class="form-group">
                            <label for="startTime">
                                <i class="fas fa-clock"></i> Start Time
                            </label>
                            <select id="startTime" class="form-control" required>
                                <option value="">Select time</option>
                                @foreach (var time in timeOptions)
                                {
                                    <option value="@time">@time</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="endTime">
                                <i class="fas fa-clock"></i> End Time
                            </label>
                            <select id="endTime" class="form-control" required>
                                <option value="">Select time</option>
                                @foreach (var time in timeOptions)
                                {
                                    <option value="@time">@time</option>
                                }
                            </select>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-check-circle"></i> Confirm Booking
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* Welcome Section */
    .welcome-section {
        background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/images/beach.png.jpg');
        background-size: cover;
        background-position: center;
        padding: 4rem 2rem;
        border-radius: 15px;
        margin-bottom: 3rem;
        text-align: center;
        color: white;
    }

    .welcome-content h1 {
        font-size: 2.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .welcome-content p {
        font-size: 1.2rem;
        opacity: 0.9;
        max-width: 600px;
        margin: 0 auto;
    }

    /* Facilities Grid */
    .facilities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 4rem;
    }

    .facility-card {
        background: #2d333b;
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 1px solid #30363d;
    }

    .facility-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    }

    .facility-image {
        height: 250px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .facility-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: all 0.3s ease;
    }

    .facility-card:hover .facility-overlay {
        opacity: 1;
    }

    .facility-overlay h3 {
        color: white;
        font-size: 1.5rem;
        margin-bottom: 1rem;
        text-align: center;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .btn-book {
        background: #238636;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 30px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    .btn-book:hover {
        background: #2ea043;
        transform: scale(1.05);
    }

    /* Alert Styles */
    .alert {
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 8px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .alert-danger {
        background: rgba(235, 77, 75, 0.2);
        border: 1px solid rgba(235, 77, 75, 0.3);
        color: #eb4d4b;
    }

    .d-none {
        display: none;
    }

    /* Reservations Section */
    .reservations-section {
        background: #21262d;
        border-radius: 15px;
        padding: 2rem;
        margin-top: 3rem;
    }

    .section-title {
        color: white;
        font-size: 2rem;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .timeline-card {
        background: #2d333b;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        display: flex;
        gap: 1.5rem;
        transition: all 0.3s ease;
    }

    .timeline-card:hover {
        transform: translateX(10px);
    }

    .timeline-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        flex-shrink: 0;
    }

    .timeline-card.confirmed .timeline-icon {
        background: linear-gradient(45deg, #238636, #2ea043);
        color: white;
    }

    .timeline-card.pending .timeline-icon {
        background: linear-gradient(45deg, #f7b731, #f7d794);
        color: #000;
    }

    .timeline-card.cancelled .timeline-icon {
        background: linear-gradient(45deg, #eb4d4b, #ff7979);
        color: white;
    }

    .timeline-content {
        flex: 1;
        display: flex;
        gap: 1.5rem;
    }

    .facility-img {
        width: 120px;
        height: 120px;
        border-radius: 10px;
        background-size: cover;
        background-position: center;
        flex-shrink: 0;
    }

    .details {
        flex: 1;
    }

    .details h4 {
        color: white;
        margin-bottom: 1rem;
    }

    .reservation-details {
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #8b949e;
        margin-bottom: 0.5rem;
    }

    .detail-item i {
        color: #58a6ff;
        width: 20px;
        text-align: center;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .status-badge.confirmed {
        background: rgba(35, 134, 54, 0.2);
        color: #2ea043;
    }

    .status-badge.pending {
        background: rgba(247, 183, 49, 0.2);
        color: #f7b731;
    }

    .status-badge.cancelled {
        background: rgba(235, 77, 75, 0.2);
        color: #eb4d4b;
    }

    /* Modal Styles */
    .modal-content {
        background: #21262d;
        border: 1px solid #30363d;
    }

    .modal-header {
        background: #2d333b;
        border-bottom: 1px solid #30363d;
        padding: 1.5rem;
    }

    .modal-title {
        color: white;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .modal-body {
        padding: 2rem;
    }

    .selected-facility {
        background: #2d333b;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
    }

    .selected-facility h6 {
        color: #8b949e;
        margin-bottom: 0.5rem;
    }

    .selected-facility p {
        color: white;
        margin: 0;
        font-size: 1.1rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        color: #8b949e;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .form-control {
        background: #2d333b;
        border: 1px solid #30363d;
        color: white;
        border-radius: 8px;
    }

    .form-control:focus {
        background: #2d333b;
        border-color: #58a6ff;
        color: white;
        box-shadow: 0 0 0 2px rgba(88, 166, 255, 0.2);
    }

    .time-selection {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .btn-primary {
        background: #238636;
        border: none;
        padding: 1rem;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: #2ea043;
        transform: translateY(-2px);
    }

    /* Responsive Styles */
    @@media (max-width: 768px) {
        .welcome-section {
            padding: 3rem 1rem;
        }

        .welcome-content h1 {
            font-size: 2rem;
        }

        .facilities-grid {
            grid-template-columns: 1fr;
        }

        .timeline-content {
            flex-direction: column;
        }

        .facility-img {
            width: 100%;
            height: 150px;
        }

        .time-selection {
            grid-template-columns: 1fr;
        }

        .pagination {
            padding: 0.25rem;
        }

        .page-link {
            width: 35px;
            height: 35px;
            font-size: 0.9rem;
        }
    }

    @@media (max-width: 480px) {
        .pagination {
            gap: 0.25rem;
        }

        .page-link {
            width: 30px;
            height: 30px;
            font-size: 0.8rem;
        }
    }

    /* No Reservations State */
    .no-reservations {
        text-align: center;
        padding: 3rem;
        color: #8b949e;
    }

    .no-reservations i {
        font-size: 3rem;
        margin-bottom: 1rem;
        color: #30363d;
    }

    .no-reservations p {
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
    }

    .no-reservations span {
        font-size: 0.9rem;
        opacity: 0.7;
    }

    /* Pagination Styles */
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 2rem;
        padding: 1rem;
    }

    .pagination {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: #2d333b;
        padding: 0.5rem;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .page-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 8px;
        color: #c9d1d9;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        background: #21262d;
        border: 1px solid #30363d;
    }

    .page-link:hover {
        background: #30363d;
        color: #58a6ff;
        transform: translateY(-2px);
    }

    .page-link.active {
        background: #238636;
        color: #ffffff;
        border-color: #238636;
        transform: translateY(-2px);
    }

    .page-link i {
        font-size: 0.9rem;
    }
</style>

<script>
    function selectFacility(facilityId, facilityName) {
        document.getElementById('selectedFacilityId').value = facilityId;
        document.getElementById('selectedFacilityName').textContent = facilityName;
        $('#bookingModal').modal('show');
        
        // Update available time slots when opening modal
        updateAvailableTimeSlots();
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Initialize AOS
        AOS.init({
            duration: 1000,
            once: true
        });

        // Function to check if a time is in the past for today
        function isTimeInPast(timeString) {
            const now = new Date();
            const [hours, minutes] = timeString.split(':').map(Number);
            const selectedTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes);
            
            // Add a 30-minute buffer to allow booking slots starting soon
            const bufferedNow = new Date(now.getTime() - (30 * 60 * 1000));
            return selectedTime < bufferedNow;
        }

        // Function to update available time slots
        function updateAvailableTimeSlots() {
            const selectedDate = $('#reservationDate').val();
            const now = new Date();
            const today = now.toISOString().split('T')[0];
            
            // If selected date is today, disable past time slots
            if (selectedDate === today) {
                $('#startTime option, #endTime option').each(function() {
                    const timeValue = $(this).val();
                    if (timeValue && timeValue !== '') {
                        $(this).prop('disabled', isTimeInPast(timeValue));
                    }
                });
            } else {
                // Enable all time slots for future dates
                $('#startTime option, #endTime option').prop('disabled', false);
            }
        }

        // Form validation
        function validateBooking(startTime, endTime, reservationDate) {
            if (!startTime || !endTime) {
                return { isValid: false, message: "Please select both start and end times." };
            }

            const now = new Date();
            const [startHours, startMinutes] = startTime.split(':').map(Number);
            const [endHours, endMinutes] = endTime.split(':').map(Number);
            const selectedDate = new Date(reservationDate);
            
            // Create Date objects for start and end times
            const startDateTime = new Date(selectedDate);
            startDateTime.setHours(startHours, startMinutes, 0);
            
            const endDateTime = new Date(selectedDate);
            endDateTime.setHours(endHours, endMinutes, 0);

            // Check if booking for today and time is in the past
            if (selectedDate.toDateString() === now.toDateString()) {
                // Add a 30-minute buffer to allow booking slots starting soon
                const bufferedNow = new Date(now.getTime() - (30 * 60 * 1000));
                if (startDateTime < bufferedNow) {
                    return { isValid: false, message: "Please select a future time slot." };
                }
            }

            if (startDateTime.getTime() === endDateTime.getTime()) {
                return { isValid: false, message: "Start time cannot be the same as end time." };
            }

            if (endDateTime < startDateTime) {
                return { isValid: false, message: "End time cannot be earlier than start time." };
            }

            return { isValid: true };
        }

        // Add event listeners for time selection
        $('#startTime, #endTime, #reservationDate').change(function() {
            const startTime = $('#startTime').val();
            const endTime = $('#endTime').val();
            const reservationDate = $('#reservationDate').val();

            // Update available time slots when date changes
            if (this.id === 'reservationDate') {
                updateAvailableTimeSlots();
                // Reset time selections when date changes
                $('#startTime, #endTime').val('');
                return;
            }

            if (startTime && endTime && reservationDate) {
                const validation = validateBooking(startTime, endTime, reservationDate);
                if (!validation.isValid) {
                    const errorAlert = $('<div class="custom-alert error">' + validation.message + '</div>');
                    $('main').prepend(errorAlert);
                    // Reset the time if it's invalid
                    if (this.id === 'startTime' || this.id === 'endTime') {
                        $(this).val('');
                    }
                }
            }
        });

        // Form submission
        $("#bookFacilityForm").submit(function(e) {
            e.preventDefault();
            const facilityID = $("#selectedFacilityId").val();
            const reservationDate = $("#reservationDate").val();
            const startTime = $("#startTime").val();
            const endTime = $("#endTime").val();

            // Validate times
            const validation = validateBooking(startTime, endTime, reservationDate);
            if (!validation.isValid) {
                const errorAlert = $('<div class="custom-alert error">' + validation.message + '</div>');
                $('main').prepend(errorAlert);
                return;
            }

            $.ajax({
                url: '@Url.Action("Book", "FacilityReservation")',
                type: 'POST',
                data: { facilityID: facilityID, reservationDate: reservationDate, startTime: startTime, endTime: endTime },
                success: function(response) {
                    if (response.success) {
                        // Hide modal
                        $('#bookingModal').modal('hide');
                        location.reload(); // This will show the TempData message after reload
                    } else {
                        // Error message will be shown through TempData
                        location.reload();
                    }
                },
                error: function() {
                    location.reload(); // Error message will be shown through TempData
                }
            });
        });

        // Initialize time slots on page load
        updateAvailableTimeSlots();
    });
</script>