@model homeowner.Models.ForumPostModel
@{
    ViewBag.Title = "Post Details";
    var currentUserId = ViewBag.UserID?.ToString();
}

<link rel="stylesheet" href="~/css/home.css" />
<link rel="stylesheet" href="~/css/homeowner_forum.css" />

<a href="@Url.Action("Index", "Forum")" class="btn btn-secondary mt-3">Back to Forum</a>

<div class="container mt-4">
    <div class="card mb-3 post-card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <h5 class="card-title mb-0">@Model.Title</h5>
                <small class="text-muted">
                    <strong>@Model.Username</strong> ‚Ä¢ Posted on @Model.CreatedAt.ToString("yyyy-MM-dd hh:mm tt")
                </small>
            </div>
        </div>
        <div class="card-body">
            <p class="card-text">@Model.Content</p>

            @if (Model.Image != null && Model.Image.Length > 0)
            {
                <img src="data:image/png;base64,@Convert.ToBase64String(Model.Image)" class="img-fluid mt-2 rounded" alt="Post Image" style="max-width: 100%; height: auto;">
            }

            <div class="d-flex align-items-center mt-2">
                <button class="btn btn-sm btn-outline-success upvote-btn upvote-post-btn" data-id="@Model.PostID">
                    üëç <span class="upvote-count">@Model.Upvotes</span>
                </button>
                <button class="btn btn-sm btn-outline-danger downvote-btn downvote-post-btn ms-2" data-id="@Model.PostID">
                    üëé <span class="downvote-count">@Model.Downvotes</span>
                </button>
            </div>
            
            @if (Context.Session.GetString("UserID") == Model.UserID.ToString())
            {
                <div class="edit-delete-buttons mt-2">
                    <button class="edit-post-btn modern-btn edit-btn" data-id="@Model.PostID" data-title="@Model.Title" data-content="@Model.Content" data-image="@Convert.ToBase64String(Model.Image ?? new byte[0])">
                        ‚úèÔ∏è Edit
                    </button>
                </div>
                <button class="btn btn-primary save-post-btn d-none">üíæ Save</button>
                <button class="btn btn-secondary cancel-post-btn d-none">‚ùå Cancel</button>
            }
                <div class="post-edit-container d-none">
                <form id="editPostForm">
                    <input type="hidden" name="PostID" value="@Model.PostID">
                    <input type="text" name="Title" class="form-control mt-2" value="@Model.Title">
                    <textarea name="Content" class="form-control mt-2">@Model.Content</textarea>
                    <input type="file" name="imageFile" class="form-control mt-2">

                    @if (Model.Image != null && Model.Image.Length > 0)
                    {
                        <div class="mt-2">
                            <label>
                        <button type="button" class="btn btn-danger mt-2" id="deleteImageBtn">Delete Image</button>
                            </label>
                        </div>
                    }
                </form>
            
            </div>
        </div>
    </div>

    <hr>
    <h4 class="mt-4">Comments</h4>
    <div class="card p-3 mb-3 shadow-sm">
        <h5 class="text-secondary">Leave a Comment</h5>
        <form id="commentForm">
            <input type="hidden" name="PostID" value="@Model.PostID">
            <textarea name="Content" class="form-control" rows="3" placeholder="Write your comment here..." required></textarea>
            <input type="file" name="imageFile" class="form-control mt-2">
            <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
        </form>
    </div>

    @if (ViewBag.Comments != null && ViewBag.Comments.Count > 0)
    {
        @foreach (var comment in ViewBag.Comments)
        {
            <div class="card mb-3 post-card" id="comment-@comment.CommentID">
                <div class="card-body">
                    <p class="comment-text font-weight-bold">@comment.Content</p>
                    <textarea class="form-control edit-textarea d-none">@comment.Content</textarea>
                    @if (comment.Image != null && comment.Image.Length > 0)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(comment.Image)" class="img-fluid mt-2 rounded" alt="Comment Image" style="max-width: 100%; height: auto;">
                    }
                    <small class="text-muted">Posted on @comment.CreatedAt.ToString("yyyy-MM-dd hh:mm tt")</small>
                    <div class="mt-2 d-flex align-items-center">
                        <button class="btn btn-sm btn-outline-success upvote-btn upvote-comment-btn" data-id="@comment.CommentID">
                            üëç <span class="upvote-count">@comment.Upvotes</span>
                        </button>
                        <button class="btn btn-sm btn-outline-danger downvote-btn downvote-comment-btn ms-2" data-id="@comment.CommentID">
                            üëé <span class="downvote-count">@comment.Downvotes</span>
                        </button>
                        @if (Context.Session.GetString("UserID") == comment.UserID.ToString())
                        {
                            <button class="btn btn-sm btn-warning edit-btn ms-2" data-id="@comment.CommentID">‚úèÔ∏è Edit</button>
                            <button class="btn btn-sm btn-primary save-btn d-none ms-2" data-id="@comment.CommentID">üíæ Save</button>
                            <button class="btn btn-sm btn-secondary cancel-btn d-none ms-2" data-id="@comment.CommentID">‚ùå Cancel</button>
                            <button class="btn btn-sm btn-danger delete-btn ms-2" data-id="@comment.CommentID">üóëÔ∏è Delete</button>
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-muted">No comments yet.</p>
    }
</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script>
      $(document).ready(function () {
        $(".upvote-post-btn, .downvote-post-btn").click(function () {
            var postID = $(this).data("id");
            var voteValue = $(this).hasClass("upvote-post-btn") ? 1 : -1;

            $.post("/Forum/VotePost", { postID: postID, voteValue: voteValue }, function (data) {
                if (data.success) {
                    location.reload(); // Refresh page to show updated vote count
                } else {
                    alert(data.message);
                }
            });
        });

        $(".upvote-comment-btn, .downvote-comment-btn").click(function () {
            var commentID = $(this).data("id");
            var voteValue = $(this).hasClass("upvote-comment-btn") ? 1 : -1;

            $.post("/Forum/VoteComment", { commentID: commentID, voteValue: voteValue }, function (data) {
                if (data.success) {
                    location.reload(); // Refresh page to show updated vote count
                } else {
                    alert(data.message);
                }
            });
        });

        $(".delete-btn").click(function () {
            var commentID = $(this).data("id");
            if (confirm("Are you sure you want to delete this comment?")) {
                $.post("/Forum/DeleteComment", { id: commentID }, function (data) {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                });
            }
        });

        $(".edit-btn").click(function () {
            var commentID = $(this).data("id");
            var commentCard = $("#comment-" + commentID);
            var commentText = commentCard.find(".comment-text");
            var editTextarea = commentCard.find(".edit-textarea");

            // Show the textarea and buttons, hide original text
            commentText.addClass("d-none");
            editTextarea.removeClass("d-none");
            commentCard.find(".save-btn, .cancel-btn").removeClass("d-none");
            $(this).addClass("d-none");
        });

        $(".cancel-btn").click(function () {
            var commentID = $(this).data("id");
            var commentCard = $("#comment-" + commentID);
            var commentText = commentCard.find(".comment-text");
            var editTextarea = commentCard.find(".edit-textarea");

            // Restore original text, hide textarea and buttons
            editTextarea.addClass("d-none");
            commentText.removeClass("d-none");
            commentCard.find(".edit-btn").removeClass("d-none");
            commentCard.find(".save-btn, .cancel-btn").addClass("d-none");
        });

        $(".save-btn").click(function () {
            var commentID = $(this).data("id");
            var commentCard = $("#comment-" + commentID);
            var newContent = commentCard.find(".edit-textarea").val();

            if (newContent.trim() === "") {
                alert("Comment cannot be empty.");
                return;
            }

            $.post("/Forum/EditComment", { CommentID: commentID, Content: newContent }, function (data) {
                if (data.success) {
                    // Update comment text and revert UI
                    commentCard.find(".comment-text").text(newContent).removeClass("d-none");
                    commentCard.find(".edit-textarea").addClass("d-none");
                    commentCard.find(".edit-btn").removeClass("d-none");
                    commentCard.find(".save-btn, .cancel-btn").addClass("d-none");
                } else {
                    alert(data.message);
                }
            });
        });

        $("#commentForm").submit(function (e) {
            e.preventDefault();

            var formData = new FormData(this);

            $.ajax({
                url: "/Forum/AddComment",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.success) {
                        location.reload(); // Refresh to show new comment
                    } else {
                        alert(data.message);
                    }
                }
            });
        });

        $(".edit-post-btn").click(function () {
            $(".post-edit-container").removeClass("d-none");
            $(".edit-post-btn").addClass("d-none");
            $(".save-post-btn, .cancel-post-btn").removeClass("d-none");
        });

        $(".cancel-post-btn").click(function () {
            $(".post-edit-container").addClass("d-none");
            $(".edit-post-btn").removeClass("d-none");
            $(".save-post-btn, .cancel-post-btn").addClass("d-none");
        });

        $(".save-post-btn").click(function () {
            var formData = new FormData($("#editPostForm")[0]);

            formData.append("RemoveImage", $("input[name='RemoveImage']").is(":checked"));

            $.ajax({
                url: "/Forum/EditPost",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    alert(data.message);
                    if (data.success) {
                        location.reload();
                    }
                }
            });
        });

        $("#deleteImageBtn").click(function () {
            var postID = $("input[name='PostID']").val(); // Get PostID from the hidden input

            if (confirm("Are you sure you want to delete this image?")) {
                $.ajax({
                    url: "/Forum/DeletePostImage",
                    type: "POST", // Change to DELETE if necessary
                    data: { PostID: postID },
                    success: function (data) {
                        if (data.success) {
                            alert("Image deleted successfully.");
                            location.reload(); // Refresh to reflect the change
                        } else {
                            alert(data.message);
                        }
                    },
                    error: function () {
                        alert("An error occurred while deleting the image.");
                    }
                });
            }
        });
    });


</script>