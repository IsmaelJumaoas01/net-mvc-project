@model homeowner.Models.PollModel
@{
    ViewData["Title"] = "Create Poll";
}

<div class="poll-create">
    <div class="dashboard-header">
        <h1>Create New Poll</h1>
    </div>

    <div class="poll-form-container">
        <form id="createPollForm">
            <div class="form-group">
                <label for="title">Poll Title</label>
                <input type="text" class="form-control" id="title" name="Title" required>
            </div>

            <div class="form-group">
                <label for="description">Description</label>
                <textarea class="form-control" id="description" name="Description" rows="3" required></textarea>
            </div>

            <div class="form-group">
                <label for="startDate">Start Date</label>
                <input type="datetime-local" class="form-control" id="startDate" name="StartDate" required>
            </div>

            <div class="form-group">
                <label for="endDate">End Date</label>
                <input type="datetime-local" class="form-control" id="endDate" name="EndDate" required>
            </div>

            <div class="form-group">
                <label>Poll Options</label>
                <div id="optionsContainer">
                    <div class="option-input">
                        <input type="text" class="form-control" name="Options[0].OptionText" placeholder="Option 1" required>
                        <button type="button" class="btn btn-danger remove-option"><i class="fas fa-times"></i></button>
                    </div>
                    <div class="option-input">
                        <input type="text" class="form-control" name="Options[1].OptionText" placeholder="Option 2" required>
                        <button type="button" class="btn btn-danger remove-option"><i class="fas fa-times"></i></button>
                    </div>
                </div>
                <button type="button" class="btn btn-secondary" id="addOption">
                    <i class="fas fa-plus"></i> Add Option
                </button>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="history.back()">Cancel</button>
                <button type="submit" class="btn btn-primary">Create Poll</button>
            </div>
        </form>
    </div>
</div>

<style>
    :root {
        --bg-primary: #f8f9fa;
        --bg-secondary: #ffffff;
        --text-primary: #2d333b;
        --text-secondary: #57606a;
        --border-color: #d0d7de;
        --accent-color: #0969da;
        --accent-hover: #1a7f37;
        --success-color: #238636;
        --danger-color: #cf222e;
        --warning-color: #9a6700;
        --shadow-color: rgba(0, 0, 0, 0.1);
        --card-bg: #ffffff;
        --card-hover: #f6f8fa;
        --icon-bg: #0969da;
        --icon-color: #ffffff;
        --gradient-primary: linear-gradient(45deg, #00bcd4, #2196f3);
        --gradient-success: linear-gradient(45deg, #4CAF50, #8BC34A);
        --gradient-warning: linear-gradient(45deg, #FFC107, #FF9800);
        --gradient-danger: linear-gradient(45deg, #f44336, #e91e63);
    }

    [data-theme="dark"] {
        --bg-primary: #0d1117;
        --bg-secondary: #161b22;
        --text-primary: #ffffff;
        --text-secondary: #8b949e;
        --border-color: #30363d;
        --accent-color: #58a6ff;
        --accent-hover: #1f6feb;
        --success-color: #238636;
        --danger-color: #f85149;
        --warning-color: #d29922;
        --shadow-color: rgba(0, 0, 0, 0.3);
        --card-bg: #21262d;
        --card-hover: #2d333b;
        --icon-bg: #58a6ff;
        --icon-color: #ffffff;
        --gradient-primary: linear-gradient(45deg, #58a6ff, #1f6feb);
        --gradient-success: linear-gradient(45deg, #238636, #2ea043);
        --gradient-warning: linear-gradient(45deg, #d29922, #f9a825);
        --gradient-danger: linear-gradient(45deg, #f85149, #f85149);
    }

    .poll-create {
        padding: 2rem;
        background: var(--bg-primary);
        min-height: 100vh;
        color: var(--text-primary);
    }

    .dashboard-header h1 {
        color: var(--text-primary);
        font-size: 2rem;
        margin-bottom: 2rem;
    }

    .poll-form-container {
        background: var(--card-bg);
        padding: 2rem;
        border-radius: 15px;
        max-width: 800px;
        margin: 0 auto;
        border: 1px solid var(--border-color);
        box-shadow: 0 4px 15px var(--shadow-color);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--text-primary);
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        color: var(--text-primary);
        transition: all 0.3s ease;
    }

    .form-control:focus {
        background: var(--bg-secondary);
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(var(--accent-color), 0.2);
        outline: none;
    }

    .option-input {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        align-items: center;
    }

    .remove-option {
        padding: 0.5rem;
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        transition: all 0.3s ease;
    }

    .remove-option:hover {
        background: var(--danger-color);
        color: white;
        border-color: var(--danger-color);
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: var(--gradient-primary);
        border: none;
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px var(--shadow-color);
    }

    .btn-secondary {
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
    }

    .btn-secondary:hover {
        background: var(--card-hover);
        border-color: var(--accent-color);
        color: var(--accent-color);
        transform: translateY(-2px);
    }

    .btn-danger {
        background: var(--gradient-danger);
        border: none;
        color: white;
    }

    .btn-danger:hover {
        background: var(--danger-color);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px var(--shadow-color);
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid var(--border-color);
    }
</style>

<script>
    $(document).ready(function() {
        let optionCount = 2;

        $('#addOption').click(function() {
            const newOption = `
                <div class="option-input">
                    <input type="text" class="form-control" name="Options[${optionCount}].OptionText" placeholder="Option ${optionCount + 1}" required>
                    <button type="button" class="btn btn-danger remove-option"><i class="fas fa-times"></i></button>
                </div>
            `;
            $('#optionsContainer').append(newOption);
            optionCount++;
        });

        $(document).on('click', '.remove-option', function() {
            if ($('.option-input').length > 2) {
                $(this).closest('.option-input').remove();
                reorderOptions();
            } else {
                showToast('At least two options are required', 'error');
            }
        });

        function reorderOptions() {
            $('.option-input').each(function(index) {
                $(this).find('input').attr('name', `Options[${index}].OptionText`)
                    .attr('placeholder', `Option ${index + 1}`);
            });
            optionCount = $('.option-input').length;
        }

        $('#createPollForm').submit(function(e) {
            e.preventDefault();
            
            // Collect form data
            const formData = {
                Title: $('#title').val(),
                Description: $('#description').val(),
                StartDate: $('#startDate').val(),
                EndDate: $('#endDate').val(),
                Options: []
            };

            // Collect all options
            $('.option-input input').each(function() {
                if ($(this).val().trim()) {
                    formData.Options.push({ OptionText: $(this).val().trim() });
                }
            });

            // Validate options
            if (formData.Options.length < 2) {
                showToast('Please provide at least two options', 'error');
                return;
            }

            // Send AJAX request
            $.ajax({
                url: '@Url.Action("Create", "Poll")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    if (response.success) {
                        showToast('Poll created successfully!', 'success');
                        setTimeout(() => window.location.href = '@Url.Action("Index", "Poll")', 1500);
                    } else {
                        showToast(response.message || 'Error creating poll', 'error');
                    }
                },
                error: function(xhr) {
                    showToast(xhr.responseText || 'Error creating poll', 'error');
                }
            });
        });

        function showToast(message, type) {
            const toast = $('<div>').addClass('toast ' + type).text(message);
            $('body').append(toast);
            setTimeout(() => toast.addClass('show'), 100);
            setTimeout(() => {
                toast.removeClass('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // Initialize datetime inputs with current date/time
        const now = new Date();
        const tomorrow = new Date(now);
        tomorrow.setDate(tomorrow.getDate() + 1);
        
        $('#startDate').val(now.toISOString().slice(0, 16));
        $('#endDate').val(tomorrow.toISOString().slice(0, 16));
    });
</script> 